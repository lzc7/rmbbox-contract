<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zipi.mapper.RmbboxCreditSaleMapper">
    <resultMap id="BaseResultMap" type="com.zipi.entity.RmbboxCreditSale">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="loan_id" property="loanId" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="subscribe_amount" property="subscribeAmount" jdbcType="DECIMAL"/>
        <result column="subscribe_number" property="subscribeNumber" jdbcType="INTEGER"/>
        <result column="rate" property="rate" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="finished_time" property="finishedTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="settled_time" property="settledTime" jdbcType="TIMESTAMP"/>
        <result column="cancle_time" property="cancleTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="days" property="days" jdbcType="INTEGER"/>
        <result column="months" property="months" jdbcType="INTEGER"/>
        <result column="years" property="years" jdbcType="INTEGER"/>
        <result column="request_no" property="requestNo" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="invest_id" property="investId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="origin_credit_id" property="originCreditId" jdbcType="INTEGER"/>
        <result column="frozen_amount" property="frozenAmount" jdbcType="DECIMAL"/>
        <result column="compensator_id" property="compensatorId" jdbcType="VARCHAR"/>
        <result column="invest_rate" property="investRate" jdbcType="DECIMAL"/>
        <result column="credit_interest" property="creditInterest" jdbcType="DECIMAL"/>
        <result column="manage_amount" property="manageAmount" jdbcType="DECIMAL"/>
        <result column="manage_rate" property="manageRate" jdbcType="DECIMAL"/>
        <result column="modify_price" property="modifyPrice" jdbcType="DECIMAL"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,loan_id,amount,subscribe_amount,subscribe_number,rate,status,finished_time,create_time,settled_time,
        cancle_time,update_time,title,days,months,years,request_no,user_id,invest_id,type,compensator_id,
        origin_credit_id,frozen_amount,invest_rate,credit_interest,manage_amount,manage_rate,modify_price
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        tb_rmbbox_credit_sale
        where id = #{id}
    </select>

    <insert id="insertSelective" parameterType="com.zipi.entity.RmbboxCreditSale">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_rmbbox_credit_sale
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="loanId != null" >
                loan_id,
            </if>
            <if test="amount != null" >
                amount,
            </if>
            <if test="subscribeAmount != null" >
                subscribe_amount,
            </if>
            <if test="subscribeNumber != null" >
                subscribe_number,
            </if>
            <if test="rate != null" >
                rate,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="finishedTime != null" >
                finished_time,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="settledTime != null" >
                settled_time,
            </if>
            <if test="cancleTime != null" >
                cancle_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="days != null" >
                days,
            </if>
            <if test="months != null" >
                months,
            </if>
            <if test="years != null" >
                years,
            </if>
            <if test="requestNo != null" >
                request_no,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="investId != null" >
                invest_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="originCreditId != null" >
                origin_credit_id,
            </if>
            <if test="frozenAmount != null" >
                frozen_amount,
            </if>
            <if test="compensatorId != null" >
                compensator_id,
            </if>
            <if test="investRate != null">
                invest_rate,
            </if>
            <if test="creditInterest != null">
                credit_interest,
            </if>
            <if test="manageAmount != null">
                manage_amount,
            </if>
            <if test="manageRate != null">
                manage_rate,
            </if>
            <if test="modifyPrice != null">
                modify_price
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loanId != null" >
                #{loanId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null" >
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="subscribeAmount != null" >
                #{subscribeAmount,jdbcType=DECIMAL},
            </if>
            <if test="subscribeNumber != null" >
                #{subscribeNumber,jdbcType=INTEGER},
            </if>
            <if test="rate != null" >
                #{rate,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="finishedTime != null" >
                #{finishedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="settledTime != null" >
                #{settledTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cancleTime != null" >
                #{cancleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="days != null" >
                #{days,jdbcType=INTEGER},
            </if>
            <if test="months != null" >
                #{months,jdbcType=INTEGER},
            </if>
            <if test="years != null" >
                #{years,jdbcType=INTEGER},
            </if>
            <if test="requestNo != null" >
                #{requestNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="investId != null" >
                #{investId,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=TINYINT},
            </if>
            <if test="originCreditId != null" >
                #{originCreditId,jdbcType=INTEGER},
            </if>
            <if test="frozenAmount != null" >
                #{frozenAmount,jdbcType=DECIMAL},
            </if>
            <if test="compensatorId != null" >
                #{compensatorId,jdbcType=VARCHAR},
            </if>
            <if test="investRate != null">
                #{investRate,jdbcType=DECIMAL},
            </if>
            <if test="creditInterest != null">
                #{creditInterest,jdbcType=DECIMAL},
            </if>
            <if test="manageAmount != null">
                #{manageAmount,jdbcType=DECIMAL},
            </if>
            <if test="manageRate != null">
                #{manageRate,jdbcType=DECIMAL},
            </if>
            <if test="modifyPrice != null">
                #{modifyPrice,jdbcType=DECIMAL}
            </if>
        </trim>
    </insert>

    <select id="queryByStatusAndUserId" resultType="java.lang.Integer">
        SELECT
        COUNT(*) count
        FROM
        tb_rmbbox_credit_sale
        WHERE
        user_id = #{userId}
        <if test="statusList != null">
            AND status IN
            <foreach collection="statusList" open="(" separator="," close=")" item="status">
                #{status}
            </foreach>
        </if>


    </select>

    <update id="updateStatusByIdAndUserId">
        UPDATE tb_rmbbox_credit_sale
        SET `status` = #{targetStatus}
        WHERE
        `status` = #{currentStatus}
        AND user_id = #{userId}
        AND id = #{id}
    </update>

    <select id="sumOnsaleAmountByLoanIdAndUserId" resultType="java.math.BigDecimal">
        SELECT
        IFNULL(SUM(amount),0) amount
        FROM
        tb_rmbbox_credit_sale
        WHERE
        `status` NOT IN (
        'CANCELED',
        'CLEARED',
        'OVERDUE_CLEARED',
        'COMPENSATORY_REPAYED',
        'FAILED'
        )
        AND user_id = #{userId}
        AND loan_id = #{loanId}
    </select>


    <select id="selectByStatus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_sale
        WHERE
        STATUS = #{status}
    </select>

    <update id="updateByStatus">
        UPDATE
        tb_rmbbox_credit_sale
        SET
        status = #{targetStatus},
        settled_time = now()
        WHERE
        id = #{id} AND status = #{originalStatus}
    </update>

    <update id="updateSubscribeForAdd" >
        UPDATE tb_rmbbox_credit_sale
        SET subscribe_amount = subscribe_amount + #{amount},
        subscribe_number = subscribe_number + 1
        where
        id = #{creditSaleId} and status = 'OPENED'
        and amount > subscribe_amount and amount >= subscribe_amount + #{amount}
    </update>

    <select id="selectByInvestId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_sale
        WHERE
        invest_id = #{investId}
    </select>

    <select id="countByOriginCreditIdAndStatusAndInvestId" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM
        tb_rmbbox_credit_sale
        WHERE
        origin_credit_id = #{originCreditId}
        AND user_id = #{userId}
        AND `status` NOT IN ('FAILED','CANCELED')
        AND invest_id = #{investId}
    </select>

    <select id="queryByInvestIdAndUserIdAndType" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        tb_rmbbox_credit_sale
        WHERE
        type = 1
        AND user_id = #{userId}
        AND invest_id = #{investId}
        AND `status` NOT IN ('FAILED','CANCELED')
        limit 1
    </select>

    <select id="selectByOriginCreditId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_sale
        WHERE
        origin_credit_id = #{originCreditId}
    </select>

    <select id="queryByOriginCreditIdAndType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_sale
        WHERE
        origin_credit_id = #{originCreditId}
        <if test="type != null and type != ''">
            and type = #{type}
        </if>
    </select>

    <select id="queryByInvestId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_sale
        WHERE
        type = 1 and invest_id = #{assignmentId}
        and status = #{creditStatus} and status != 'FAILED' and status != 'INITIATED'
    </select>

    <select id="selectOutCreditList" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        tb_rmbbox_credit_sale
        WHERE
        invest_id = #{investId}
        <if test="statusList != null">
            AND status IN
            <foreach collection="statusList" open="(" separator="," close=")" item="status">
                #{status}
            </foreach>
        </if>
    </select>

    <update id="updateStatusAndSubscribAmountAndNumById" >
        UPDATE tb_rmbbox_credit_sale
        SET subscribe_amount = subscribe_amount + #{subAmount},
        subscribe_number = subscribe_number + 1,
        status = #{targetStatus}
        where
        id = #{id} and status = #{originalStatus}
        and amount > subscribe_amount and amount >= subscribe_amount + #{subAmount}
    </update>

    <select id="queryByUserIdAndStatusAndInvestId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_rmbbox_credit_sale
        WHERE user_id = #{userId}
        AND `status` = #{status}
        AND invest_id = #{investId}
    </select>

    <select id="selectByUserIdAndStatus" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_sale
        WHERE user_id = #{userId}
        <if test="status != null">
            AND `status` in
            <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                #{s}
            </foreach>
        </if>
        ORDER BY create_time DESC
        limit #{start},#{end}
    </select>

    <select id="selectCreditsByStatus" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_sale
        <where>
            <if test="beginDate != null and endDate != null">
                AND (create_time between #{beginDate} and #{endDate})
            </if>

            <if test="status != null">
                AND `status` in
                <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                    #{s}
                </foreach>
            </if>
        </where>
        ORDER BY create_time DESC
        limit #{start},#{end}
    </select>

    <select id="queryCreditSaleListForMarket" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_sale
        <where>
            <if test="statusList != null">
                status in
                <foreach collection="statusList" open="(" close=")" index="" item="status" separator=",">
                    #{status}
                </foreach>
            </if>
            <if test="loanDaysStart != null and loanDaysStart != 0">
                AND
                #{loanDaysStart} <![CDATA[<=]]> DATEDIFF(DATE_ADD(DATE_ADD(create_time,INTERVAL months+12*years MONTH),INTERVAL days DAY),create_time)
            </if>
            <if test="loanDaysEnd != null and loanDaysEnd != 0">
                AND
                #{loanDaysEnd} <![CDATA[>=]]> DATEDIFF(DATE_ADD(DATE_ADD(create_time,INTERVAL months+12*years MONTH),INTERVAL days DAY),create_time)
            </if>
        </where>
            order by
                case when
                  status = 'OPENED' then invest_rate end desc,
                case when
                  FIELD(status,'FINISHED','SETTLING','SETTLED','UNCLEARED','CLEARED') then create_time end desc
            <if test="pageInfo != null">
                LIMIT #{pageInfo.startRow},#{pageInfo.pageSize}
            </if>
    </select>

    <select id="selectSaleByUserId" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_sale WHERE user_id = #{userId} AND status NOT IN ('FAILED') ORDER BY create_time DESC limit #{start},#{end}
    </select>

    <select id="selectListByStatusAndDate" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_sale
        <where>
            <if test="statusList != null">
                status in
                <foreach collection="statusList" open="(" close=")" index="" item="status" separator=",">
                    #{status}
                </foreach>
            </if>
            <if test="startDate != null">
                and create_time >= #{startDate}
            </if>
            <if test="endDate != null ">
                and #{endDate} > create_time
            </if>
        </where>

    </select>

    <select id="querySumAmountByInvestId" resultType="java.math.BigDecimal">
        SELECT
        IFNULL(SUM(subscribe_amount),0)
        FROM
        tb_rmbbox_credit_sale
        WHERE status = 'UNCLEARED'
        and invest_id = #{investId}
    </select>

    <select id="queryCountId" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM tb_rmbbox_credit_sale
    </select>

    <update id="updateAmountByIdAndUserId">
        UPDATE tb_rmbbox_credit_sale
        SET manage_amount = #{manageAmount},
        manage_rate = #{manageRate}
        WHERE
        user_id = #{userId}
        AND id = #{id}
    </update>

    <select id="selectSum" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_sale
        <where>
            <if test="beginDate != null and endDate != null">
                AND (create_time between #{beginDate} and #{endDate})
            </if>

            <if test="status != null">
                AND `status` in
                <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                    #{s}
                </foreach>
            </if>
        </where>
    </select>
    <select id="selectSaleSumByUserId" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_sale WHERE user_id = #{userId} AND status NOT IN ('FAILED')
    </select>

    <select id="selectSumByUserIdAndStatus" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_sale
        WHERE user_id = #{userId}
        <if test="status != null">
            AND `status` in
            <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                #{s}
            </foreach>
        </if>
    </select>

    <update id="updateStatusAndDateByStatus" >
        UPDATE
        tb_rmbbox_credit_sale
        SET
        status = #{targetStatus},
        finished_time = #{date}
        WHERE
        id = #{id} AND status = #{originalStatus}
    </update>

    <update id="updateStatusAndDateForCancel" >
        UPDATE
        tb_rmbbox_credit_sale
        SET
        status = #{targetStatus},
        cancle_time = #{date}
        WHERE
        id = #{id} AND status = #{originalStatus}
    </update>

    <select id="queryCreditIngByInvestId" resultType="java.math.BigDecimal">
        SELECT
        IFNULL(SUM(amount),0)
        FROM
        tb_rmbbox_credit_sale
        WHERE status not in ('UNCLEARED','FAILED','CANCELED')
        and invest_id = #{investId}
    </select>

    <select id="queryByIdWithUserInfo" resultType="com.zipi.entity.RmbboxCreditSale">
        SELECT
        u.user_name userName,u.id_number idNumber,s.loan_id loanId,s.settled_time settledTime,
        s.credit_interest creditInterest,
        s.manage_amount manageAmount,s.request_no requestNo,s.id id,s.subscribe_amount subscribeAmount,
        s.invest_rate investRate,s.invest_id investId,s.rate rate
        from tb_rmbbox_credit_sale s,tb_core_user u
        WHERE s.user_id = u.user_id
        AND s.id = #{id}
        limit 1
    </select>

    <select id="queryEnterpriseInfoByCreditId" resultType="com.zipi.entity.CoreUser">
        SELECT
        u.user_name AS userName,
        u.enterprise,
        u.company_name AS companyName,
        u.customer_no AS customerNo,
        u.user_mobile AS userMobile,
        u.id_number AS idNumber,
        u.user_id as userId
        FROM tb_rmbbox_credit_sale s,tb_core_user u
        WHERE
        s.user_id=u.user_id
        AND s.id = #{id}
    </select>
    <select id="querySumSubscribeAmountByInvestId" resultType="java.math.BigDecimal">
        SELECT
        IFNULL(SUM(subscribe_amount),0)
        FROM
        tb_rmbbox_credit_sale
        WHERE invest_id = #{investId}
    </select>

    <select id="selectByLoanId" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            tb_rmbbox_credit_sale
        WHERE
            loan_id = #{loanId}
    </select>
</mapper>