<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zipi.mapper.CoreSealFlieMapper" >
    <resultMap id="BaseResultMap" type="com.zipi.entity.CoreSealFlie" >
            <id column="file_id" property="fileId" jdbcType="VARCHAR" />
            <result column="invest_id" property="investId" jdbcType="VARCHAR" />
            <result column="file_path" property="filePath" jdbcType="VARCHAR" />
            <result column="file_name" property="fileName" jdbcType="VARCHAR" />
            <result column="file_type" property="fileType" jdbcType="VARCHAR" />
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
            <result column="file_period" property="filePeriod" jdbcType="INTEGER" />
            <result column="flag_seal" property="flagSeal" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    file_id,invest_id,file_path,file_name,file_type,create_time,file_period,flag_seal
    </sql>
    <select id="selectByExample" parameterType="com.zipi.entity.CoreSealFlieExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_core_seal_flie
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart&gt;=0">
          limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_core_seal_flie
        where file_id = #{fileId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_core_seal_flie
    where file_id = #{fileId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zipi.entity.CoreSealFlieExample">
    delete from tb_core_seal_flie
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zipi.entity.CoreSealFlie">
    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="fileId">
        SELECT UPPER(UUID()) AS fileId
    </selectKey>
    insert into tb_core_seal_flie (file_id,invest_id,file_path,
		file_name,file_type,create_time,
		file_period)
    values (#{fileId,jdbcType=VARCHAR},#{investId,jdbcType=VARCHAR},#{filePath,jdbcType=VARCHAR},
		#{fileName,jdbcType=VARCHAR},#{fileType,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},
		#{filePeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zipi.entity.CoreSealFlie">
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="fileId">
            SELECT UPPER(UUID()) AS fileId
        </selectKey>
    insert into tb_core_seal_flie
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null" >
          file_id,
      </if>
      <if test="investId != null" >
          invest_id,
      </if>
      <if test="filePath != null" >
          file_path,
      </if>
      <if test="fileName != null" >
          file_name,
      </if>
      <if test="fileType != null" >
          file_type,
      </if>
      <if test="createTime != null" >
          create_time,
      </if>
      <if test="filePeriod != null" >
          file_period
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null" >
          #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="investId != null" >
          #{investId,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
          #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
          #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
          #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
          #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filePeriod != null" >
          #{filePeriod,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zipi.entity.CoreSealFlieExample" resultType="java.lang.Integer">
    select count(*) from tb_core_seal_flie
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_core_seal_flie
    <set>
    <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=VARCHAR},
    </if>
    <if test="record.investId != null">
        invest_id = #{record.investId,jdbcType=VARCHAR},
    </if>
    <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
    </if>
    <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
    </if>
    <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="record.filePeriod != null">
        file_period = #{record.filePeriod,jdbcType=INTEGER}
    </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_core_seal_flie
    set file_id = #{record.fileId,jdbcType=VARCHAR},
    	invest_id = #{record.investId,jdbcType=VARCHAR},
    	file_path = #{record.filePath,jdbcType=VARCHAR},
    	file_name = #{record.fileName,jdbcType=VARCHAR},
    	file_type = #{record.fileType,jdbcType=VARCHAR},
    	create_time = #{record.createTime,jdbcType=TIMESTAMP},
    	file_period = #{record.filePeriod,jdbcType=INTEGER}
    	
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zipi.entity.CoreSealFlie">
    update tb_core_seal_flie
    <set>
    <if test="record.investId != null">
        invest_id = #{record.investId,jdbcType=VARCHAR},
    </if>
    <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
    </if>
    <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
    </if>
    <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="record.filePeriod != null">
        file_period = #{record.filePeriod,jdbcType=INTEGER}
    </if>
    </set>
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zipi.entity.CoreSealFlie">
    update tb_core_seal_flie
    set invest_id = #{record.investId,jdbcType=VARCHAR},
		file_path = #{record.filePath,jdbcType=VARCHAR},
		file_name = #{record.fileName,jdbcType=VARCHAR},
		file_type = #{record.fileType,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		file_period = #{record.filePeriod,jdbcType=INTEGER}
		
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>

  <select id="selectByTypeAndInvestIdAndPeriod"  resultMap="BaseResultMap">
  SELECT  <include refid="Base_Column_List"/>
FROM
	tb_core_seal_flie
WHERE  1=1
<if test="investId!=null  and investId!=''">AND  invest_id = #{investId}</if>
<if test="type!=null  and type!=''">AND file_type = #{type}</if>
AND file_period = #{period}
ORDER BY	create_time DESC
  </select>
  
  <update id="updateByTypeAndInvestIdAndPeriod">
  update tb_core_seal_flie
    <set>
    <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
    </if>
    <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
    <if test="record.filePeriod != null">
        file_period = #{record.filePeriod,jdbcType=INTEGER}
    </if>
    </set>
    WHERE  invest_id = #{record.investId,jdbcType=VARCHAR}
AND  file_type = #{record.fileType,jdbcType=VARCHAR}
AND  file_period = #{record.filePeriod,jdbcType=INTEGER}
  </update>
  
  <select id="countByProductTypeAndFileTypeAndInvestTimeAndReportTime"  resultType="int">
  SELECT
	count(csf.file_id)
FROM
	tb_core_seal_flie csf
JOIN tb_claim_invest ci ON ci.invest_id = csf.invest_id
WHERE 1=1
<if test="investTimeBefore!=null and  investTimeAfter!=null">AND ci.submit_time  BETWEEN #{investTimeBefore} AND  #{investTimeAfter}</if>
<if test="depositDueTimeBefore!=null and  depositDueTimeAfter!=null">AND ci.deposit_due_date  BETWEEN #{depositDueTimeBefore} AND  #{depositDueTimeAfter}</if>
<if test="fileTypeList!=null and fileTypeList!=''">AND csf.file_type IN
<foreach open="("  close=")" collection="fileTypeList" item="fileType"  separator=",">#{fileType}</foreach>
</if>
<if test="productType!=null  and productType!=''">AND ci.product_type =#{productType}</if>
<if test="reportTimeBefore!=null and  reportTimeAfter!=null">AND csf.create_time  BETWEEN #{reportTimeBefore} AND  #{reportTimeAfter}</if>
  </select>
  
  <select id="selectByProductTypeAndFileTypeAndInvestTimeAndReportTime"  resultMap="BaseResultMap">
    SELECT
	csf.file_path,csf.file_name,csf.invest_id
FROM
	tb_core_seal_flie csf
JOIN tb_claim_invest ci ON ci.invest_id = csf.invest_id
WHERE 1=1
<if test="investTimeBefore!=null and  investTimeAfter!=null">AND ci.submit_time  BETWEEN #{investTimeBefore} AND  #{investTimeAfter}</if>
<if test="depositDueTimeBefore!=null and  depositDueTimeAfter!=null">AND ci.deposit_due_date  BETWEEN #{depositDueTimeBefore} AND  #{depositDueTimeAfter}</if>
<if test="fileTypeList!=null and fileTypeList!=''">AND csf.file_type IN
<foreach open="("  close=")" collection="fileTypeList" item="fileType"  separator=",">#{fileType}</foreach>
</if>
<if test="productType!=null  and productType!=''">AND ci.product_type =#{productType}</if>
<if test="reportTimeBefore!=null and  reportTimeAfter!=null">AND csf.create_time  BETWEEN #{reportTimeBefore} AND  #{reportTimeAfter}</if>
ORDER BY create_time  DESC
<if test="pageInfo!=null">LIMIT #{pageInfo.startRow},#{pageInfo.pageSize}</if>
  </select>
    <!-- 查询未签章的协议 -->
    <select id="selectUnSignatureFile" resultMap="BaseResultMap">
        SELECT
        <include refid = "Base_Column_List" />
        FROM
        tb_core_seal_flie
        WHERE
        flag_seal = FALSE
        AND file_type = #{fileType}
    </select>
    <update id="updateAgreementStatus">
        UPDATE tb_core_seal_flie
        SET flag_seal = TRUE
        WHERE
            file_id = #{fileId}
        AND flag_seal = FALSE
    </update>
    <select id="selectByInvestIdAndFilePathAndFileNameAndFileType" resultMap="BaseResultMap">
    	
    	select <include refid = "Base_Column_List" /> from tb_core_seal_flie where 
    	invest_id = #{investId}
		and file_type =#{fileType} and file_path = #{filePath} and file_name = #{fileName};
    </select>
    
    <select id="getDuplicateDataByFilePath" resultType="java.lang.String">
    select invest_id from tb_core_seal_flie 
    where file_type = 'NEW_ZJCJBG' group by file_path,file_type,invest_id
	having count(file_path)>1
    </select>

    <select id="countSellBillByProductTypeAndDepositDueTime" resultType="int">
        SELECT count(sf.invest_id) FROM tb_core_seal_flie sf,tb_claim_repay_apply ra,tb_claim_invest ci WHERE
sf.invest_id=ra.id
AND ra.invest_id=ci.invest_id
AND sf.file_type="NEW_SELLBILL"
AND ra.product_type=#{productType}
AND ci.deposit_due_date BETWEEN #{depositDueTimeBefore} AND #{depositDueTimeAfter}
    </select>
    <select id="selectSellBillByProductTypeAndDepositDueTime"  resultType="com.zipi.entity.CoreSealFlie">
        SELECT sf.file_path AS filePath,sf.file_name AS fileName,sf.invest_id AS investId FROM tb_core_seal_flie sf,tb_claim_repay_apply ra,tb_claim_invest ci WHERE
sf.invest_id=ra.id
AND ra.invest_id=ci.invest_id
AND sf.file_type="NEW_SELLBILL"
AND ra.product_type=#{productType}
AND ci.deposit_due_date BETWEEN #{depositDueTimeBefore} AND #{depositDueTimeAfter}
ORDER BY sf.create_time  DESC
<if test="pageInfo!=null">LIMIT #{pageInfo.startRow},#{pageInfo.pageSize}</if>
    </select>
    <select id="countSubscriptionAgreementByProductTypeAndInvestTime" resultType="int">
select count(sf.file_id) FROM  tb_core_seal_flie sf,tb_asset_invest ai
where sf.invest_id=ai.invest_id
and sf.file_type="SubscriptionAgreement"
<if test="productType!=null and productType!=''">and ai.product_type=#{productType}</if>
<if test="investTimeBefore!=null and investTimeAfter!=null">and ai.submit_time BETWEEN #{investTimeBefore}  AND #{investTimeAfter}</if>
   </select>
    <select id="selectSubscriptionAgreementByProductTypeAndInvestTime"  resultMap="BaseResultMap">
SELECT
sf.file_path,sf.file_name,sf.invest_id
FROM  tb_core_seal_flie sf,tb_asset_invest ai
where sf.invest_id=ai.invest_id
and sf.file_type="SubscriptionAgreement"
<if test="productType!=null and productType!=''">and ai.product_type=#{productType}</if>
<if test="investTimeBefore!=null and investTimeAfter!=null">and ai.submit_time BETWEEN #{investTimeBefore}  AND #{investTimeAfter}</if>
ORDER BY sf.create_time  DESC
<if test="pageInfo!=null">LIMIT #{pageInfo.startRow},#{pageInfo.pageSize}</if>
    </select>
    <select id="selectFileByFileTypeAndCreateTime" resultType="com.zipi.entity.CoreSealFlie">
        select file_id AS fileId,file_path AS filePath
        from tb_core_seal_flie
        where file_type=#{fileType}
        <if test="from!=null and to!=null">and create_time BETWEEN #{from} AND #{to}</if>
    </select>

    <update id="updateCreateDateByFileId">
        UPDATE  tb_core_seal_flie SET  create_time=#{createDate}
        where file_id =#{fileId}
    </update>

    <select id="queryByFiletypeAndInvestId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_core_seal_flie
        WHERE invest_id = #{loanId} AND file_type = #{sealFileType} LIMIT 1
    </select>
</mapper>