<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zipi.mapper.CoreUserMapper">
    <resultMap id="BaseResultMap" type="com.zipi.entity.CoreUser">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="emp_id" property="empId" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="TINYINT"/>
        <result column="lock_type" property="lockType" jdbcType="VARCHAR"/>
        <result column="enterprise" property="enterprise" jdbcType="TINYINT"/>
        <result column="id_number" property="idNumber" jdbcType="VARCHAR"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="last_modified_by" property="lastModifiedBy" jdbcType="VARCHAR"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="user_mobile" property="userMobile" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="need_change_pwd" property="needChangePwd" jdbcType="TINYINT"/>
        <result column="passphrase" property="passphrase" jdbcType="VARCHAR"/>
        <result column="register_time" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="register_source" property="registerSource" jdbcType="VARCHAR"/>
        <result column="referral_id" property="referralId" jdbcType="VARCHAR"/>
        <result column="referral_realm" property="referralRealm" jdbcType="VARCHAR"/>
        <result column="referralLoginName" property="referralLoginName" jdbcType="VARCHAR"/>
         <result column="ip" property="ip" jdbcType="VARCHAR"/>
        
        <!-- 用户金额相关 -->
          <result column="available_amount" property="availableAmount" />
          <result column="frozen_amount" property="forzenAmount" />
          <result column="withdraw_amount" property="withdrawAmount" />
          <result column="due_in_amount" property="dueInAmount" />
          <result column="due_out_amount" property="dueOutAmount" />
          <result column="deposit_amount" property="depositAmount" />
          
		   <!-- 用户金额相关 -->

        <!--总充值金额或回款金额-->
        <result column="amount" property="amount" />

        <!--企业用户相关-->
        <result column="en_address" property="enAddress" jdbcType="VARCHAR"/>
        <result column="en_phone" property="enPhone" jdbcType="VARCHAR"/>
        <result column="en_nature" property="enNature" jdbcType="VARCHAR"/>
        <result column="en_license_no" property="enLicenseNo" jdbcType="VARCHAR"/>
        
        <result column="referralIdNumber" property="referralIdNumber" jdbcType="VARCHAR"/>
        <result column="maintenanceEmpId" property="maintenanceEmpId" jdbcType="VARCHAR"/>
        <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="maintenanceIdNumber" property="maintenanceIdNumber" jdbcType="VARCHAR"/>
        <result column="certificate_type" property="certificateType" jdbcType="VARCHAR"/>
        <result column="user_role" property="userRole" jdbcType="VARCHAR"/>

        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="tax_registration_number" property="taxRegistrationNumber" jdbcType="VARCHAR"/>
        <result column="institutional_credit_code" property="institutionalCreditCode" jdbcType="VARCHAR"/>
        <result column="bank_license" property="bankLicense" jdbcType="VARCHAR"/>
        <result column="organization_code" property="organizationCode" jdbcType="VARCHAR"/>
        <result column="xw_status" property="xwStatus" jdbcType="VARCHAR"/>
        <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR"/>
        <result column="unified_code" property="unifiedCode" jdbcType="VARCHAR"/>
        <result column="customer_no" property="customerNo" jdbcType="VARCHAR"/>

    </resultMap>

    <sql id="Base_Column_List">
    user_id, email, emp_id, enabled, lock_type, enterprise, id_number, last_login_time,
    last_modified_by, login_name, user_mobile, user_name, need_change_pwd, passphrase, register_time,
    salt, register_source, referral_id, referral_realm,en_address,en_phone,en_nature,en_license_no,certificate_type,
    user_role,contact_name,company_name,tax_registration_number,institutional_credit_code,bank_license,organization_code,
    xw_status,contact_phone,unified_code,customer_no
    </sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from tb_core_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="CoreUser">
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="userId">
            SELECT UPPER(UUID()) AS userId
        </selectKey>
        insert into tb_core_user (user_id, email, emp_id,
        enabled, lock_type, enterprise, id_number, last_login_time, last_modified_by,
        login_name, user_mobile, user_name,need_change_pwd, passphrase, register_time,
        salt, register_source, referral_id, referral_realm,en_address,en_phone,en_nature,en_license_no
        <if test="certificateType !=null">
            ,certificate_type
        </if>
        <if test="userRole !=null">
            ,user_role
        </if>
        <if test="contactName !=null and contactName !=''">
            ,contact_name
        </if>
        <if test="companyName !=null and companyName !=''">
            ,company_name
        </if>
        <if test="taxRegistrationNumber !=null and taxRegistrationNumber !=''">
            ,tax_registration_number
        </if>
        <if test="institutionalCreditCode !=null and institutionalCreditCode !=''">
            ,institutional_credit_code
        </if>
        <if test="bankLicense !=null and bankLicense !=''">
            ,bank_license
        </if>
        <if test="organizationCode !=null and organizationCode !=''">
            ,organization_code
        </if>
        <if test="xwStatus !=null and xwStatus !=''">
            ,xw_status
        </if>
        <if test="contactPhone !=null and contactPhone !=''">
            ,contact_phone
        </if>
        <if test="unifiedCode !=null and unifiedCode !=''">
            ,unified_code
        </if>
        <if test="customerNo !=null and customerNo !=''">
            ,customer_no
        </if>
        )
        values (#{userId}, #{email,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR},
        #{enabled,jdbcType=TINYINT}, #{lockType,jdbcType=VARCHAR}, #{enterprise,jdbcType=TINYINT},
        #{idNumber,jdbcType=VARCHAR}, NOW(), #{lastModifiedBy,jdbcType=VARCHAR},
        #{loginName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
        #{needChangePwd,jdbcType=TINYINT}, #{passphrase,jdbcType=VARCHAR},NOW(),
        #{salt,jdbcType=VARCHAR}, #{registerSource,jdbcType=VARCHAR}, #{referralId,jdbcType=VARCHAR},
        #{referralRealm,jdbcType=VARCHAR},#{enAddress,jdbcType=VARCHAR},#{enPhone,jdbcType=VARCHAR},
        #{enNature,jdbcType=VARCHAR},#{enLicenseNo,jdbcType=VARCHAR}

        <if test="certificateType !=null">
            ,#{certificateType,jdbcType=VARCHAR}
        </if>
        <if test="userRole !=null">
            ,#{userRole,jdbcType=VARCHAR}
        </if>
        <if test="contactName !=null and contactName !=''">
            ,#{contactName,jdbcType=VARCHAR}
        </if>
        <if test="companyName !=null and companyName !=''">
            ,#{companyName,jdbcType=VARCHAR}
        </if>
        <if test="taxRegistrationNumber !=null and taxRegistrationNumber !=''">
            ,#{taxRegistrationNumber,jdbcType=VARCHAR}
        </if>
        <if test="institutionalCreditCode !=null and institutionalCreditCode !=''">
            ,#{institutionalCreditCode,jdbcType=VARCHAR}
        </if>
        <if test="bankLicense !=null and bankLicense !=''">
            ,#{bankLicense,jdbcType=VARCHAR}
        </if>

        <if test="organizationCode !=null and organizationCode !=''">
            ,#{organizationCode,jdbcType=VARCHAR}
        </if>
        <if test="xwStatus !=null and xwStatus !=''">
            ,#{xwStatus,jdbcType=VARCHAR}
        </if>
        <if test="contactPhone !=null and contactPhone !=''">
            ,#{contactPhone,jdbcType=VARCHAR}
        </if>
        <if test="unifiedCode !=null and unifiedCode !=''">
            ,#{unifiedCode,jdbcType=VARCHAR}
        </if>
        <if test="customerNo !=null and customerNo !=''">
            ,#{customerNo,jdbcType=VARCHAR}
        </if>
        )
    </insert>

    <insert id="insertWithUserId" parameterType="CoreUser">
        insert into tb_core_user (user_id, email, emp_id,
        enabled, lock_type, enterprise, id_number, last_login_time, last_modified_by,
        login_name, user_mobile, user_name,need_change_pwd, passphrase, register_time,
        salt, register_source, referral_id, referral_realm,en_address,en_phone,en_nature,en_license_no
        <if test="certificateType !=null">
            ,certificate_type
        </if>
        <if test="userRole !=null">
            ,user_role
        </if>
        <if test="contactName !=null and contactName !=''">
            ,contact_name
        </if>
        <if test="companyName !=null and companyName !=''">
            ,company_name
        </if>
        <if test="taxRegistrationNumber !=null and taxRegistrationNumber !=''">
            ,tax_registration_number
        </if>
        <if test="institutionalCreditCode !=null and institutionalCreditCode !=''">
            ,institutional_credit_code
        </if>
        <if test="bankLicense !=null and bankLicense !=''">
            ,bank_license
        </if>
        <if test="organizationCode !=null and organizationCode !=''">
            ,organization_code
        </if>
        <if test="xwStatus !=null and xwStatus !=''">
            ,xw_status
        </if>
        <if test="contactPhone !=null and contactPhone !=''">
            ,contact_phone
        </if>
        <if test="unifiedCode !=null and unifiedCode !=''">
            ,unified_code
        </if>
        <if test="customerNo !=null and customerNo !=''">
            ,customer_no
        </if>
        )
        values (#{userId}, #{email,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR},
        #{enabled,jdbcType=TINYINT}, #{lockType,jdbcType=VARCHAR}, #{enterprise,jdbcType=TINYINT},
        #{idNumber,jdbcType=VARCHAR}, NOW(), #{lastModifiedBy,jdbcType=VARCHAR},
        #{loginName,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
        #{needChangePwd,jdbcType=TINYINT}, #{passphrase,jdbcType=VARCHAR},NOW(),
        #{salt,jdbcType=VARCHAR}, #{registerSource,jdbcType=VARCHAR}, #{referralId,jdbcType=VARCHAR},
        #{referralRealm,jdbcType=VARCHAR},#{enAddress,jdbcType=VARCHAR},#{enPhone,jdbcType=VARCHAR},
        #{enNature,jdbcType=VARCHAR},#{enLicenseNo,jdbcType=VARCHAR}

        <if test="certificateType !=null">
            ,#{certificateType,jdbcType=VARCHAR}
        </if>
        <if test="userRole !=null">
            ,#{userRole,jdbcType=VARCHAR}
        </if>
        <if test="contactName !=null and contactName !=''">
            ,#{contactName,jdbcType=VARCHAR}
        </if>
        <if test="companyName !=null and companyName !=''">
            ,#{companyName,jdbcType=VARCHAR}
        </if>
        <if test="taxRegistrationNumber !=null and taxRegistrationNumber !=''">
            ,#{taxRegistrationNumber,jdbcType=VARCHAR}
        </if>
        <if test="institutionalCreditCode !=null and institutionalCreditCode !=''">
            ,#{institutionalCreditCode,jdbcType=VARCHAR}
        </if>
        <if test="bankLicense !=null and bankLicense !=''">
            ,#{bankLicense,jdbcType=VARCHAR}
        </if>
        <if test="organizationCode !=null and organizationCode !=''">
            ,#{organization_code,jdbcType=VARCHAR}
        </if>
        <if test="xwStatus !=null and xwStatus !=''">
            ,#{xwStatus,jdbcType=VARCHAR}
        </if>
        <if test="contactPhone !=null and contactPhone !=''">
            ,#{contactPhone,jdbcType=VARCHAR}
        </if>
        <if test="unifiedCode !=null and unifiedCode !=''">
            ,#{unifiedCode,jdbcType=VARCHAR}
        </if>
        <if test="customerNo !=null and customerNo !=''">
            ,#{customerNo,jdbcType=VARCHAR}
        </if>
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.zipi.entity.CoreUser">
        update tb_core_user
        <set>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="empId != null">
                emp_id = #{empId,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=TINYINT},
            </if>
            <if test="lockType != null">
                lock_type = #{lockType,jdbcType=VARCHAR},
            </if>
            <if test="enterprise != null">
                enterprise = #{enterprise,jdbcType=TINYINT},
            </if>
            <if test="idNumber != null">
                id_number = #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifiedBy != null">
                last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="userMobile != null">
                user_mobile = #{userMobile,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="needChangePwd != null">
                need_change_pwd = #{needChangePwd,jdbcType=TINYINT},
            </if>
            <if test="passphrase != null">
                passphrase = #{passphrase,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                register_time= #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="registerSource != null">
                register_source = #{registerSource,jdbcType=VARCHAR},
            </if>
            <if test="referralId != null">
                referral_id = #{referralId,jdbcType=VARCHAR},
            </if>
            <if test="referralRealm != null">
                referral_realm = #{referralRealm,jdbcType=VARCHAR},
            </if>
            <if test="enAddress != null">
                en_address = #{enAddress,jdbcType=VARCHAR},
            </if>
            <if test="enPhone != null">
                en_phone = #{enPhone,jdbcType=VARCHAR},
            </if>
            <if test="enNature != null">
                en_nature = #{enNature,jdbcType=VARCHAR},
            </if>
            <if test="enLicenseNo != null">
                en_license_no = #{enLicenseNo,jdbcType=VARCHAR},
            </if>
            <if test="userLevel != null">
                user_level = #{userLevel,jdbcType=VARCHAR},
            </if>
            <if test="certificateType != null">
                certificate_type = #{certificateType},
            </if>

            <if test="userRole != null">
                user_role = #{userRole},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName},
            </if>
            <if test="companyName != null">
                company_name = #{companyName},
            </if>
            <if test="taxRegistrationNumber != null">
                tax_registration_number = #{taxRegistrationNumber},
            </if>
            <if test="institutionalCreditCode != null">
                institutional_credit_code = #{institutionalCreditCode},
            </if>
            <if test="bankLicense != null">
                bank_license = #{bankLicense},
            </if>
            <if test="organizationCode != null">
                organization_code = #{organizationCode},
            </if>
            <if test="xwStatus != null">
                xw_status = #{xwStatus},
            </if>
            <if test="contactPhone != null">
                contact_phone = #{contactPhone},
            </if>
             <if test="unifiedCode != null">
                 unified_code = #{unifiedCode},
            </if>
            <if test="customerNo != null">
                customer_no = #{customerNo}
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>

    <select id="checkMobile"  resultType="int">
    SELECT COUNT(*) from tb_core_user  WHERE user_mobile = #{mobile}
        <if test="enterprise != null" >
            and enterprise = #{enterprise}
        </if>
        <if test="userRole !=null">
            and user_role = #{userRole}
        </if>
  </select>

    <select id="checkLoginName"  resultType="int">
    SELECT count(*) FROM tb_core_user WHERE login_name = #{loginName}
        <if test="enterprise != null" >
            and enterprise = #{enterprise}
        </if>
        <if test="userRole !=null">
            and user_role = #{userRole}
        </if>
  </select>

    <!-- <select id="checkIdNumber" parameterType="java.lang.String" resultType="int">
    SELECT count(*) FROM tb_core_user WHERE id_number = #{idNumber}
  </select> -->

    <select id="checkEmail" parameterType="java.lang.String" resultType="int">
    SELECT count(*) FROM tb_core_user WHERE email = #{email}
  </select>

    <select id="getByIdsOrNameOrMobile" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_core_user
        WHERE id_number=#{search} or user_id=#{search} or user_mobile=#{search}
        OR login_name=#{search}
    </select>

    <!-- 查询所有员工用户信息 -->
    <select id="getAllUser" resultMap="BaseResultMap">
    select *
    from tb_core_user
     limit #{pageNo},#{pageSize}
  </select>

    <select id="listUserLikeAndPage" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        SELECT
        a.*, b.login_name referralLoginName
        FROM
        tb_core_user a
        LEFT JOIN tb_core_user b ON a.referral_id = b.user_id
        where 1=1
        and a.enterprise = ${enterprise}
        <if test="search != null and '' != search">
            and (a.EMAIL like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.LOGIN_NAME like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_NAME like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_MOBILE like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.ID_NUMBER like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.company_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
        <if test="xwStatus != null and '' != xwStatus">
            and a.xw_status = #{xwStatus, jdbcType=VARCHAR}
        </if>
        order by ${sortCol} ${direction}
        limit ${pageInfo.startRow},${pageInfo.pageSize}
    </select>

    <select id="countUserLike" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(*)
        from tb_core_user a
        where 1=1
        and a.enterprise = ${enterprise}
        <if test="search != null and '' != search">
            and (a.EMAIL like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.LOGIN_NAME like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_NAME like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_MOBILE like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.ID_NUMBER like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.company_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
    </select>

    <select id="findByMobile"  resultMap="BaseResultMap">
        SELECT *
          FROM tb_core_user
         WHERE user_mobile = #{mobile}
        order by user_role = 'INVESTOR' desc

        <!--<if test="enterprise != null" >-->
            <!--and enterprise = #{enterprise}-->
        <!--</if>-->
        <!--<if test="userRole !=null">-->
            <!--and user_role = #{userRole}-->
        <!--</if>-->
    </select>

    <!-- <select id="findByIdNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT *
        FROM tb_core_user
        WHERE id_number = #{idNumber}
    </select> -->

    <select id="findByLoginName"  resultMap="BaseResultMap">
        SELECT * 
          FROM tb_core_user 
         WHERE login_name = #{loginName}
        <!--<if test="enterprise != null" >
            and enterprise = #{enterprise}
        </if>-->
        <!--<if test="userRole !=null">-->
            <!--and user_role = #{userRole}-->
        <!--</if>-->
    </select>

    <update id="updateLoginTime" parameterType="java.lang.String">
        update tb_core_user 
           set last_login_time = now()
         where user_id = #{userId}
    </update>

    <select id="listUsersLike111" resultMap="BaseResultMap">
        SELECT a.*, ifnull(b.login_name,'') referralLoginName, c.LOGININFO as ip
        from tb_core_user a
        left join tb_core_user as b
        on a.referral_id = b.user_id
        left join (select login_info LOGININFO, user_id from tb_core_user_login_record order by login_time asc limit 0,1) as c
        ON c.USER_ID= a.user_id
        where 1=1
        <if test="search != null and '' != search">
            and (a.EMAIL like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.login_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_mobile like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.id_number like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
        order by register_time desc
    </select>
    
     <select id="listUsersLike" resultMap="BaseResultMap" parameterType="java.lang.String">
         SELECT a.*, IFNULL(b.LOGIN_NAME,''),  c.LOGININFO as ip
         from tb_core_user a
         left join tb_core_user as b
         on a.REFERRAL_ID = b.user_id
         left join (select login_info LOGININFO, USER_ID from tb_core_user_login_record order by login_time asc limit 0,1) as c
         ON c.USER_ID= a.user_ID
        where 1=1
        <if test="search != null and '' != search">
            and (a.EMAIL like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.LOGIN_NAME like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_NAME like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.user_MOBILE like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or a.ID_NUMBER like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
        order by a.register_time desc
    </select>

	<select id="getUserDetail" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT 
		t.user_id,
		  t.register_time,
		  t.last_login_time,
		  f.available_amount,
		  f.frozen_amount,
		  f.withdraw_amount,
		  f.due_in_amount,
		  f.due_out_amount,
		  f.deposit_amount,
		  t.login_name,
		  t.user_name,
		  t.id_number,
		  t.user_mobile,
		  t.email,
		  u.login_name referralLoginName,
          t.en_address,
          t.en_phone,
          t.en_nature,
          t.en_license_no,
          t.enterprise,
          t.company_name,
          t.tax_registration_number,
          t.institutional_credit_code,
        t.bank_license,
        t.contact_phone,
        t.organization_code,
        t.unified_code,
        t.contact_name,
          m.maintenance_id_number maintenanceIdNumber,
          m.maintenance_emp_id maintenanceEmpId,
          m.modify_time modifyTime,
          m.original_referral_id_number referralIdNumber,
          t.user_role as userRole
	FROM
		  tb_core_user t 
		  LEFT JOIN tb_core_user u 
		    ON t.referral_id = u.user_id 
		  LEFT JOIN tb_core_user_fund f 
		    ON t.user_id = f.user_id 
		  LEFT JOIN tb_core_user_maintenance m on t.user_id=m.user_id
		<where>
    	<if test="userId!=null and '' !=userId">
    	t.user_id = #{userId,jdbcType=VARCHAR}
    	</if>
	</where>
	</select>
	
    <select id="listUserIdByLoginDate" resultType="java.lang.String">
        SELECT DISTINCT
            ulr.USER_ID
        FROM
            tb_core_user_login_record ulr,
            tb_core_user u
        WHERE
            ulr.user_id = u.user_id
        and (ulr.login_time between #{from} and #{to}) order by ulr.login_time desc
        limit 0,20
    </select>

    <select id="countUserIdByLoginDate" resultType="java.lang.Integer">
        SELECT
        count( DISTINCT ulr.USER_ID)
        FROM
        tb_core_user_login_record ulr,
        tb_core_user u
        WHERE
        ulr.user_id = u.user_id
        and (ulr.login_time between #{from} and #{to}) order by ulr.login_time desc
    </select>

    <select id="listCoreUserByLoginDate" resultMap="BaseResultMap">
        SELECT * FROM tb_core_user where (last_login_time between #{from} and #{to}) order by last_login_time desc limit 0,20
    </select>

    <select id="countCoreUserByLoginDate" resultType="java.lang.Integer">
        SELECT count(*) FROM tb_core_user where (last_login_time between #{from} and #{to}) order by last_login_time desc
    </select>

    <select id="dailyRegister" parameterType="java.util.Date" resultType="map">
        SELECT
        CAST(u.register_time AS DATE) AS d,
        COUNT(*) as c
        FROM
        tb_core_user u
        WHERE
        (u.register_time BETWEEN #{from} AND #{to})
        GROUP BY d
        ORDER BY d
    </select>
    <!--<select id="dailyLogin" resultType="map">-->
        <!--SELECT-->
            <!--cast(login_time AS date) AS d,-->
            <!--count(DISTINCT(u.USER_ID)) AS c-->
        <!--FROM-->
            <!--tb_core_user_login_record ulr,-->
            <!--tb_core_user u-->
        <!--WHERE-->
            <!--ulr.SUCCESS = 1-->
        <!--AND (-->
            <!--ulr.login_time BETWEEN #{from} and #{to})-->
            <!--AND u.user_id = ulr.user_id-->
            <!--GROUP BY d-->
            <!--ORDER BY d-->
    <!--</select>-->
<!--     fhj  查询推荐人记录数 -->
    <select id="listReferralUsers" resultType="com.zipi.entity.ReferralUser">
        SELECT 
		    a.user_id AS userId,
		    a.login_name AS loginName,
		    a.user_name AS userName,
		    a.user_mobile AS userMobile,
		    b.Count AS referralCount
		FROM
		    tb_core_user a
		        LEFT JOIN
		    (SELECT 
		        COUNT(*) AS Count, REFERRAL_ID
		    FROM
		        tb_core_user
		    WHERE
		        REFERRAL_REALM = 'USER'
<!-- 		           AND RMB_FLAG = TRUE -->
		    GROUP BY REFERRAL_ID
		    HAVING Count > 0) AS b ON a.user_id = b.referral_id
		WHERE
		    b.Count > 0 
<!-- 		    AND RMB_FLAG = TRUE -->
        <if test="search != null and '' != search">
            and (login_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_mobile like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
        order by referralCount desc
        LIMIT #{pageInfo.startRow},#{pageInfo.pageSize}
    </select>





<select id="countReferralUsers" resultType="java.lang.Integer">
        select count(*)
        FROM
		    tb_core_user a
		        LEFT JOIN
		    (SELECT 
		        COUNT(*) AS Count, REFERRAL_ID
		    FROM
		        tb_core_user
		    WHERE
		        REFERRAL_REALM = 'USER'
<!-- 		           AND RMB_FLAG = TRUE -->
		    GROUP BY REFERRAL_ID
		    HAVING Count > 0) AS b ON a.user_id = b.referral_id
		WHERE
		    b.Count > 0 
<!-- 		    AND RMB_FLAG = TRUE -->
        <if test="search != null and '' != search">
             and (login_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_mobile like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
<!--         order by Count desc -->
    </select>
     <select id="countByReferralId" resultType="java.lang.Integer">
        select count(*)
        from tb_core_user
        where referral_id = #{referralId}
        <if test="search != null and '' != search">
            and (login_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_mobile like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
        order by register_time
    </select>
    <select id="listLoginNamesByReferral" resultType="java.lang.String">
        select login_name
        from tb_core_user
        where referral_id = #{referralId}
    </select>
    
    <select id="listUsersByReferralIdAndPage" resultMap="BaseResultMap">
        select *
        from tb_core_user
        where referral_id = #{referralId}
<!--         and RMB_FLAG = true -->
        <if test="search != null and '' != search">
            and (login_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_name like binary concat('%', #{search, jdbcType=VARCHAR}, '%')
            or user_mobile like binary concat('%', #{search, jdbcType=VARCHAR}, '%'))
        </if>
        order by register_time desc
        limit ${pageInfo.startRow},${pageInfo.pageSize}
    </select>


	 <select id="findByRequestId" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t,tb_rmbbox_loan_request r
        where t.user_id = r.user_id and r.request_id = #{loanRequestId}
    </select>
    
    <select id="getRecommendUser" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t
        where t.referral_id = #{referralId} order by t.register_time desc
    </select>
    
    <select id="findByEmail" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t
        where t.email = #{email}
    </select>
    
       <select id="findByRegisterDay" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t
 		 WHERE   t.register_time BETWEEN  #{startDate} AND #{endDate}
    </select>

    <select id="findByEnLicenseNo" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t
        where t.en_license_no = #{enLicenseNo} and user_role = #{role}
        and enterprise = true
        limit 0,1
    </select>

    <select id="findByUnifiedCode" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t
        where t.unified_code = #{unifiedCode} and user_role = #{role}
        and enterprise = true
        limit 0,1
    </select>

    <select id="findByUserNameForEn" resultMap="BaseResultMap">
        select t.*
        from tb_core_user t
        where t.user_name = #{userName} and user_role = #{role}
        and enterprise = true
        limit 0,1
    </select>

    <select id="getByMobileAndLoginName" resultMap="BaseResultMap">
        select *
        from tb_core_user
        where user_mobile = #{mobile}
        <if test="loginName != null and loginName != ''">
            and login_name = #{loginName}
        </if>
    </select>

    <select id="listRegisterUserRechargMessageByTime" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select u.*,amount from tb_core_user u
         INNER JOIN
        (
			SELECT RES.UID1,RES.amount FROM (
SELECT * FROM (
                SELECT MAX(UFR.record_time) AS record_time, UFR.user_id AS UID1,SUM(UFR.amount) as amount
                FROM tb_core_user_fund_record UFR
                WHERE ufr.direct_type='FundDeposit'
                AND UFR.operation_type LIKE '%DEPOSIT'
                AND UFR.operation_status = 'IN'
                AND UFR.trade_status = 'SUCCESSFUL'
                and date_format(record_time,'%Y-%m-%d') =  date_format(#{from},'%Y-%m-%d')
                GROUP BY UFR.user_id
            ) AS UCR LEFT JOIN (
                SELECT  UFR2.user_id AS UID2,MAX(UFR2.record_time) as record_time2
                FROM tb_core_user_fund_record UFR2
                WHERE ufr2.record_time BETWEEN  #{from} and #{to}
                AND UFR2.trade_status = 'SUCCESSFUL'
                AND UFR2.operation_type = 'INVEST'
        GROUP BY UFR2.user_id
        )AS UCI

        ON UCR.UID1=uci.UID2 and ucr.record_time <![CDATA[ < ]]> uci.record_time2
        ) RES
        WHERE RES.UID2 IS NULL

        ) UA ON UA.UID1=U.USER_ID
    </select>

    <select id="listRegisterUserMoneyBackMessageByTime" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select u.*,amount from tb_core_user u
         INNER JOIN
        (
			SELECT RES.UID1,RES.amount FROM (
SELECT * FROM (
                SELECT MAX(UFR.record_time) AS record_time, UFR.user_id AS UID1,SUM(UFR.amount) as amount
                FROM tb_core_user_fund_record UFR
                WHERE ufr.direct_type='FundInvestRepay'
                AND UFR.operation_status = 'IN'
                AND UFR.trade_status = 'SUCCESSFUL'
                and date_format(record_time,'%Y-%m-%d') =  date_format(#{from},'%Y-%m-%d')
                GROUP BY UFR.user_id
            ) AS UCR LEFT JOIN (
                SELECT  UFR2.user_id AS UID2,MAX(UFR2.record_time) as record_time2
                FROM tb_core_user_fund_record UFR2
                WHERE ufr2.record_time BETWEEN  #{from} and #{to}
                AND UFR2.trade_status = 'SUCCESSFUL'
                AND UFR2.operation_type = 'INVEST'
             GROUP BY UFR2.user_id
        )AS UCI
        ON UCR.UID1=uci.UID2 and ucr.record_time <![CDATA[ < ]]> uci.record_time2
        ) RES
        WHERE RES.UID2 IS NULL
        ) UA ON UA.UID1=U.USER_ID
    </select>
    
    <update id="disableUserForManager" parameterType="java.lang.String">
        update tb_core_user set enabled = false, lock_type = null
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>


    <select id="getUserInvestInfo" resultType="map">
        select * from (
      SELECT
        u.user_id,
        CI.invest_id,
        CI.product_id,
        IFNULL(U.login_name,'') login_name,
        IFNULL(date_format(CI.submit_time,'%Y-%c-%e %H:%i'),'') submit_time,
        IFNULL(CI.amount,0) amount,
        U.user_mobile,
        0 days,
        CI.product_type ptype,
        CI.submit_time as stime
    FROM
        tb_core_user u
    LEFT JOIN tb_core_user_extension_info uei ON uei.user_id = u.user_id
    INNER JOIN tb_claim_invest CI ON CI.user_id = U.user_id
    WHERE 1=1 AND UEI.register_source_type=#{type}
    <if test="from!=null">
        and date_format(u.register_time,'%Y-%c-%e') <![CDATA[>=]]> #{from}
    </if>
    <if test="to!=null">
        and date_format(u.register_time,'%Y-%c-%e') <![CDATA[<=]]> #{to}
    </if>
    UNION ALL
        SELECT
            u.user_id,
            RI.invest_id,
            RI.loan_id product_id,
            IFNULL(U.login_name,'') login_name,
            IFNULL(date_format(RI.submit_time,'%Y-%c-%e %H:%i'),'') submit_time,
            IFNULL(RI.invest_amount,0) amount,
            U.user_mobile,
            (RI.years * 365 + RI.months * 30 + RI.days) days,
            'BBT' ptype,
            RI.submit_time as stime
        FROM
            tb_core_user u
        LEFT JOIN tb_core_user_extension_info uei ON uei.user_id = u.user_id
        INNER JOIN tb_rmbbox_invest RI ON RI.user_id = U.user_id
        WHERE 1=1 AND UEI.register_source_type=#{type}
        <if test="from!=null">
            and date_format(u.register_time,'%Y-%c-%e') <![CDATA[>=]]> #{from}
        </if>
        <if test="to!=null">
            and date_format(u.register_time,'%Y-%c-%e') <![CDATA[<=]]> #{to}
        </if>
        ) dd
        order by dd.stime desc
        LIMIT #{pageInfo.startRow},#{pageInfo.pageSize}
    </select>

    <select id="getUserInvestInfoCount" resultType="int">
        SELECT COUNT(*) FROM ( SELECT
          1
        FROM
        tb_core_user u
        LEFT JOIN tb_core_user_extension_info uei ON uei.user_id = u.user_id
        INNER JOIN tb_claim_invest CI ON CI.user_id = U.user_id
        WHERE 1=1 AND UEI.register_source_type=#{type}
        UNION ALL
        SELECT
          1
        FROM
        tb_core_user u
        LEFT JOIN tb_core_user_extension_info uei ON uei.user_id = u.user_id
        INNER JOIN tb_rmbbox_invest RI ON RI.user_id = U.user_id
        WHERE 1=1 AND UEI.register_source_type=#{type}
        ) A
</select>


    <select id="getExtensionUserInvestInfo" resultType="map">
        select
          ufr.amount AS amount,
          ufr.record_time AS record_time,
          u.user_name AS user_name,
          u.user_id AS user_id,
          u.user_mobile AS user_mobile,
          uei.sub_register_source_type AS sub_register_source_type,
          ufr.product AS product,
          ufr.invest_id AS invest_id
        FROM tb_core_user_fund_record ufr
        LEFT JOIN tb_core_user u ON ufr.user_id = u.user_id
        INNER JOIN tb_core_user_extension_info uei ON uei.user_id = ufr.user_id
        where uei.register_source_type=#{type}
        and operation_status = 'FREEZE'
        and ufr.direct_type = 'FundInvest'
        <if test="startDate!=null and endDate!=null">
            and (ufr.record_time between #{startDate} and #{endDate})
        </if>
    </select>

    <select id="getExtensionUserFirstInvestInfo" resultType="map">
        select ufr.user_id,min(ufr.record_time) as record_time
        FROM
        tb_core_user_fund_record ufr,
        tb_core_user_extension_info uei
        where ufr.user_id = uei.user_id
        and uei.register_source_type=#{type}
        and ufr.operation_status = 'FREEZE'
        and ufr.direct_type = 'FundInvest'
        GROUP BY user_id
    </select>
    <select id="listUserBybirthday" resultType="map" parameterType="java.util.HashMap">
            select u.user_id as user_id,u.user_mobile from tb_core_user u where SUBSTR(u.id_number, 11,4) = #{birthday,jdbcType=VARCHAR};
    </select>
    <select id="listUserByInvest" resultType="map" parameterType="java.util.HashMap">
        select DISTINCT(u.user_id) as user_id,u.user_mobile from tb_core_user u,tb_core_user_fund_record r where u.user_id = r.user_id and r.direct_type = 'FundInvest'
            AND r.trade_status = 'SUCCESSFUL';
    </select>
    
    <select  id="getCountRegister"   resultType="java.lang.Integer">
     SELECT COUNT(user_id) from tb_core_user
    </select>
    <select  id="getUsersByUserLevelAndSourceType"   resultMap="BaseResultMap">
     select u.user_id as user_id from tb_core_user u, tb_core_user_extension_info ue 
     where 1=1 and u.user_id = ue.user_id
     		<if test="userLevels!=null">
                u.user_level in 
                <foreach collection="userLevels" item="userLevel" open="(" separator="," close=")">
                    #{userLevel}
                </foreach>
            </if>
     		<if test="userLevels!=null">
                ue.register_source_type in 
                <foreach collection="sourceTypes" item="sourceType" open="(" separator="," close=")">
                    #{sourceType}
                </foreach>
            </if>
    </select>
    <select  id="getUsersByUserLevel"   resultMap="BaseResultMap">
     select u.user_id as user_id from tb_core_user u
     where 1=1 
     		<if test="userLevels!=null">
                u.user_level in 
                <foreach collection="userLevels" item="userLevel" open="(" separator="," close=")">
                    #{userLevel}
                </foreach>
            </if>
    </select>
    <select  id="getUsersBySourceType"   resultMap="BaseResultMap">
     select ue.user_id as user_id  tb_core_user_extension_info ue 
     where 1=1  
     		<if test="userLevels!=null">
                ue.register_source_type in 
                <foreach collection="sourceTypes" item="sourceType" open="(" separator="," close=")">
                    #{sourceType}
                </foreach>
            </if>
    </select>
    <select  id="getAllUsers"   resultMap="BaseResultMap">
     select user_id from tb_core_user 
    </select>
    <select  id="getBatchUsersByLimit"   resultMap="BaseResultMap">
     select user_id from tb_core_user order by register_time limit #{startRecord} , #{batchCounts}
    </select>

    <select id="getInvitationUser" resultMap="BaseResultMap">
      select * from tb_core_user where referral_id = #{userId} and register_time between #{start} and #{end}
    </select>

    <select id="getUsersByReferralIdAndDate" resultMap="BaseResultMap">
        select * from tb_core_user where referral_id = #{userId}
        <if test="startTime!=null and endTime!=null">
            and register_time between #{startTime} and #{endTime}
        </if>
        order by register_time desc
        limit #{start},#{pageSize}
    </select>

    <select id="countUsersByReferralIdAndDate" resultType="java.lang.Integer">
        select count(*) from tb_core_user where referral_id = #{userId}
        <if test="startTime!=null and endTime!=null">
            and register_time between #{startTime} and #{endTime}
        </if>
    </select>
    
    <select id="getUsersByReferralIdAndDateWithoutPage"  resultMap="BaseResultMap">
            select <include refid="Base_Column_List"/> from tb_core_user where referral_id = #{userId}
        <if test="startTime!=null and endTime!=null">
            and register_time between #{startTime} and #{endTime}
        </if>
        order by register_time desc
    </select>
    

    <select id="listUsersIdByReferralId"  resultType="string">
		SELECT
			user_id
		FROM
			tb_core_user
		WHERE
			referral_id = #{referralId}
    </select>
    <select id="getRegisterUserCount" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM tb_core_user
    </select>

    <select id="getRegisterUserId" resultType="java.lang.String">
        SELECT user_id FROM tb_core_user limit #{startIndex}, #{pageSize}
    </select>

    <update id="updateMobileByUserId">
        update tb_core_user
           set user_mobile = #{mobile}
         where user_id = #{userId}
    </update>

    <select id="getUserRoleCollectionByRole" resultMap="BaseResultMap">
      SELECT * FROM tb_core_user where user_role = #{userRole}
      <if test="userList!=null">
          and user_id in
          <foreach collection="userList" item="item" index="" open="(" close=")" separator=",">
              #{item}
          </foreach>
      </if>
    </select>

    <update id="updateXWStatusByUserId">
      update tb_core_user
           set xw_status = #{xwStatus}
         where user_id = #{userId}

    </update>

    <update id="updateCustomNoByUserId">
        update tb_core_user
        set customer_no = #{customerNo}
        where user_id = #{userId}

    </update>
    <update id="updateUserInfoByUserIdForXWCallback" parameterType="java.util.HashMap">

        update tb_core_user
        <set>
            <if test="enterpriseName != null and enterpriseName!=''">
                company_name = #{enterpriseName, jdbcType=VARCHAR},
            </if>
            <if test="bankLicense != null and bankLicense!=''">
                bank_license = #{bankLicense, jdbcType=VARCHAR},
            </if>
            <if test="orgNo != null and orgNo!=''">
                organization_code = #{orgNo, jdbcType=VARCHAR},
            </if>
            <if test="businessLicense != null and businessLicense!=''">
                en_license_no = #{businessLicense, jdbcType=VARCHAR},
            </if>
            <if test="taxNo != null and taxNo!=''">
                tax_registration_number = #{taxNo, jdbcType=VARCHAR},
            </if>
            <if test="creditCode != null and creditCode!=''">
                institutional_credit_code = #{creditCode, jdbcType=VARCHAR},
            </if>

            <if test="legal != null and legal!=''">
                user_name = #{legal, jdbcType=VARCHAR},
            </if>
            <if test="legalIdCardNo != null and legalIdCardNo!=''">
                id_number = #{legalIdCardNo, jdbcType=VARCHAR},
            </if>
            <if test="contact != null and contact!=''">
                contact_name = #{contact, jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null and contactPhone!=''">
                contact_phone = #{contactPhone, jdbcType=VARCHAR},
            </if>
            <if test="unifiedCode != null and unifiedCode!=''">
                unified_code = #{unifiedCode, jdbcType=VARCHAR}
            </if>

        </set>

        where user_id = #{platformUserNo, jdbcType=VARCHAR}
    </update>

    <select id="listUserByReferralIdOutUserIdList"  resultType="com.zipi.entity.CoreUser">
        SELECT
        user_id AS userId,
        user_mobile AS userMobile,
        register_time AS registerTime
        FROM tb_core_user
        WHERE
        referral_id=#{referralId}
        <if test="userIdList != null">
            AND user_id NOT IN
            <foreach collection="userIdList" item="userId" open="(" separator="," close=")">#{userId}</foreach></if>
    </select>

    <select id="findByMobileOrInvitationCode" resultMap="BaseResultMap">
        SELECT u.*
        from tb_core_user u,tb_core_user_ext e
        where
        u.user_id = e.user_id
        AND u.user_role ='INVESTOR' and (u.user_mobile = #{code} or e.invitation_code = #{code})
    </select>

    <select id="listUserByLoginNameAndCompanyNameAndExcInvestUserRole" resultMap="BaseResultMap" >
        SELECT
        a.*
        FROM
        tb_core_user a
        where 1=1
        and (
        a.LOGIN_NAME = #{search, jdbcType=VARCHAR}
        or a.user_NAME = #{search, jdbcType=VARCHAR}
        or a.company_name = #{search, jdbcType=VARCHAR}
        )

    </select>
    <select id="listEnterpriseWithoutFddNo" resultMap="BaseResultMap" >
        select * from tb_core_user where xw_status='PASSED' and enterprise=1 and customer_no='' and user_id not like 'SYS_%';
    </select>

    <select id="queryUserByuserIdAndRole" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            tb_core_user
        WHERE
            user_mobile = #{mobile} and user_role = #{userRole}
    </select>

    <select id="queryUserByMobileAndRoleAndEnterpriseFlag" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_core_user
        WHERE
        user_mobile = #{mobile} and user_role = #{userRole} and enterprise = #{enterprise}
    </select>

    <select id="findByIdNumberAndUserRole" resultMap="BaseResultMap">
        select * from tb_core_user where id_number = #{idNumber} and user_role = #{userRole}
        and (lock_type != 'FORCE_DISABLED' or lock_type is null ) limit 1
    </select>

    <select id="queryByloginName" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM
            tb_core_user
        WHERE
            1 = 1
            <if test="loginName !=null and loginName !=''">
                AND login_name = #{loginName}
            </if>
            <if test="mobile !=null and mobile !=''">
                AND user_mobile = #{mobile}
            </if>
            <if test="loginName ==null or loginName ==''">
                <if test="mobile ==null or mobile ==''">
                    AND 1 = 2
                </if>
            </if>
            <if test="userRole != null">
                AND user_role = #{userRole}
            </if>
            <if test="enterprise != null">
                AND enterprise = #{enterprise}
            </if>
        order by user_role = 'INVESTOR' desc
    </select>

    <update id="resetAllRolePass" parameterType="com.zipi.entity.CoreUser">
        update
            tb_core_user
        set
            passphrase = #{passphrase,jdbcType=VARCHAR},
            salt = #{salt,jdbcType=VARCHAR}
        where
            user_mobile = #{userMobile,jdbcType=VARCHAR}
    </update>

    <update id="updateUserMobile">
        update
            tb_core_user
        set
            login_name=#{newMobile},user_mobile=#{newMobile}
        where
            user_mobile=#{oldMobile} and user_role = 'INVESTOR'
    </update>

    <select id="queryUserByMobile" resultType="java.lang.Integer">
        select COUNT(1) from
        tb_core_user
        where user_mobile=#{userMobile};
    </select>

    <select id="findByMobileAndUserRoleAndEnterprise"  resultMap="BaseResultMap">
        SELECT *
        FROM tb_core_user
        WHERE user_mobile = #{mobile} and user_role = #{userRole}
        <if test="enterprise != null ">
            and enterprise = #{enterprise}
        </if>

    </select>

    <select id="countsByIdNumberAndUserRoleAndEnterprise"  resultType="int">
        SELECT count(1)
        FROM tb_core_user u

        where  u.user_role = #{userRole} and u.enterprise = #{enterprise}
        and u.id_number = #{idNumber}

    </select>

    <update id="updateIdNumberAndUserNameAndCertificateTypeByUserId">
        update
        tb_core_user
        set
        id_number=#{idNumber},user_name=#{userName},certificate_type = #{certificateType}
        where
        user_id=#{userId}
        AND (
         SELECT  *
			FROM
				(SELECT   COUNT(1)
				FROM
                tb_core_user u
				WHERE
					u.user_role = #{userRole}
                    AND u.enterprise = #{enterprise}
                    and u.user_id != #{userId}
                    AND u.id_number = #{idNumber}) a

			 ) = 0
    </update>


    <select id="findUserIdsByIdNumber" resultType="string">
        SELECT user_id FROM
        tb_core_user
        <where>

            id_number = #{idNumber}

            <if test="userRole != null and userRole != ''">
                and user_role = #{userRole}
            </if>
            <if test="enterprise != null">
                and enterprise = #{enterprise}
            </if>
        </where>
    </select>
    
    <update id="updateRefByUserId">
        UPDATE tb_core_user SET referral_id = #{refId} WHERE user_id = #{userId}
    </update>

    <select id="selectInvestorIdByIdCard" parameterType="string" resultType="string">
        SELECT b.user_id FROM
        tb_core_user u INNER JOIN tb_core_binding b ON u.user_id = b.user_id
        WHERE b.user_id_number = #{idCardNumber} AND u.user_role = 'INVESTOR' AND u.xw_status = 'PASSED' limit 1
    </select>

    <select id="findByLoginNameAndEnterprise"  resultMap="BaseResultMap">
        SELECT *
        FROM tb_core_user
        WHERE login_name = #{loginName}
        <if test="enterprise != null" >
            and enterprise = #{enterprise}
        </if>
        and user_role = 'BORROWERS'
    </select>
</mapper>