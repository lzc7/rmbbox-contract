<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zipi.modules.contract.mapper.RmbboxCreditAssignmentMapper">
    <resultMap id="BaseResultMap" type="com.zipi.modules.contract.entity.RmbboxCreditAssignment">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="credit_id" property="creditId" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="client" property="client" jdbcType="VARCHAR"/>
        <result column="interest_amount" property="interestAmount" jdbcType="DECIMAL"/>
        <result column="prop_id" property="propId" jdbcType="VARCHAR"/>
        <result column="prop_type" property="propType" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="share" property="share" jdbcType="DECIMAL"/>
        <result column="credit_interest" property="creditInterest" jdbcType="DECIMAL"/>
        <result column="is_last" property="isLast" jdbcType="TINYINT"/>
        <result column="raise_amount" property="raiseAmount" jdbcType="DECIMAL"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,credit_id,amount,create_time,user_id,order_id,type,client,interest_amount,prop_id,prop_type,share,credit_interest,is_last,raise_amount
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        tb_rmbbox_credit_assignment
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insertSelective" parameterType="com.zipi.modules.contract.entity.RmbboxCreditAssignment" useGeneratedKeys="true" keyProperty="id">
        insert into tb_rmbbox_credit_assignment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="creditId != null">
                credit_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="interestAmount != null">
                interest_amount,
            </if>
            <if test="propId != null">
                prop_id,
            </if>
            <if test="propType != null">
                prop_type,
            </if>
            <if test="client != null">
                client,
            </if>
            <if test="share != null">
                share,
            </if>
            <if test="creditInterest != null">
                credit_interest,
            </if>
            <if test="isLast != null">
                is_last,
            </if>
            <if test="raiseAmount != null">
                raise_amount
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="creditId != null">
                #{creditId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="interestAmount != null">
                #{interestAmount,jdbcType=DECIMAL},
            </if>
            <if test="propId != null">
                #{propId,jdbcType=VARCHAR},
            </if>
            <if test="propType != null">
                #{propType,jdbcType=VARCHAR},
            </if>
            <if test="client != null">
                #{client,jdbcType=VARCHAR},
            </if>
            <if test="share != null">
                #{share,jdbcType=DECIMAL},
            </if>
            <if test="creditInterest != null">
                #{creditInterest,jdbcType=DECIMAL},
            </if>
            <if test="isLast != null">
                #{isLast,jdbcType=TINYINT},
            </if>
            <if test="raiseAmount != null">
                #{raiseAmount,jdbcType=DECIMAL}
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zipi.modules.contract.entity.RmbboxCreditAssignment">
        update tb_rmbbox_credit_assignment
        <set>
            <if test="record.creditId != null">
                credit_id = #{record.creditId,jdbcType=INTEGER},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.client != null">
                client = #{record.client,jdbcType=VARCHAR},
            </if>
            <if test="record.share != null">
                share = #{record.share,jdbcType=DECIMAL},
            </if>
            <if test="record.creditInterest != null">
                credit_interest = #{record.creditInterest,jdbcType=DECIMAL},
            </if>
            <if test="record.isLast != null">
                is_last = #{record.isLast,jdbcType=TINYINT}
            </if>
        </set>
        where id = #{record.id,jdbcType=INTEGER}
    </update>

    <select id="selectByCreditId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_assignment
        WHERE
        credit_id = #{creditId}
    </select>

    <select id="selectPageByCreditId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_rmbbox_credit_assignment
        WHERE
        credit_id = #{creditId}
        ORDER BY create_time DESC
        limit #{start},#{end}
    </select>

    <select id="queryAssignmentWithSale" resultMap="BaseResultMap">
        SELECT
        a.*,s.`status`
        FROM
        tb_rmbbox_credit_assignment a,
        tb_rmbbox_credit_sale s
        WHERE
        a.id = s.invest_id
        AND s.`type` = 1
        AND a.credit_id = #{creditId}
        <if test="status != null">
            AND s.`status` = #{status}
        </if>
    </select>

    <select id="queryByOrderId" resultMap="BaseResultMap">
        SELECT
        *
        from tb_rmbbox_credit_assignment
        WHERE order_id = #{orderId}
        AND user_id = #{userId}
        AND `type` = #{type}
        AND credit_id = #{saleId}
    </select>

    <select id="waitRepayCouponInterestList" resultType="java.util.Map">
        SELECT
        r.id,
        i.id as assignment_id,
        i.interest_amount,
        i.user_id,
        i.raise_amount
        FROM
        tb_rmbbox_credit_assignment i
        INNER JOIN tb_rmbbox_credit_assignment_repayment r ON i.id = r.assignment_id
        WHERE
        i.credit_id = #{creditId}
        AND (i.interest_amount > 0 or i.raise_amount > 0)
        AND r.amount_raise is null
        AND r.current_period = #{currentPeriod}
    </select>

    <select id="queryAssignmentLeftjoinSale" resultMap="BaseResultMap">
        SELECT
        a.*
        FROM
        tb_rmbbox_credit_assignment a LEFT JOIN tb_rmbbox_credit_sale s on a.id = s.invest_id
        WHERE s.id IS NULL
    </select>

    <select id="sumInterestAmountByCreditId" resultType="java.math.BigDecimal">
        SELECT SUM(IFNULL(interest_amount,0)) from tb_rmbbox_credit_assignment WHERE credit_id = #{creditId}
    </select>
    <select id="selectByUserIdAndStatus" resultMap="BaseResultMap">
        SELECT
        a.*
        FROM
        tb_rmbbox_credit_assignment a INNER JOIN tb_rmbbox_credit_sale s ON a.credit_id = s.id
        <where>
            <if test="status != null">
                s.status in
                <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                    #{s}
                </foreach>
            </if>
            AND a.user_id = #{userId}
        </where>
        ORDER BY create_time DESC
        limit #{start},#{end}
    </select>

    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_assignment
        <where>
            <if test="beginDate != null and endDate != null">
                and (create_time between #{beginDate} and #{endDate})
            </if>
        </where>
        ORDER BY create_time DESC
        limit #{start},#{end}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_assignment WHERE user_id = #{userId} ORDER BY create_time DESC limit #{start},#{end}
    </select>

    <select id="selectByLoanId" resultMap="BaseResultMap">
        SELECT a.* FROM tb_rmbbox_credit_assignment a INNER JOIN tb_rmbbox_credit_sale s ON a.credit_id = s.id WHERE s.loan_id = #{loanId} ORDER BY create_time DESC
         limit #{start},#{end}
    </select>

    <select id="querySumShareByUserId" resultType="java.math.BigDecimal">
        SELECT
        coalesce(SUM(`share`),0)
        FROM
        tb_rmbbox_credit_assignment
        WHERE user_id = #{userId}
    </select>

    <select id="querySumAmountByCreditId" resultType="java.math.BigDecimal">
        SELECT  coalesce(SUM(amount),0) FROM
        tb_rmbbox_credit_assignment
        WHERE credit_id = #{creditId}
    </select>

    <select id="querySumCreditInterestByCreditId" resultType="java.math.BigDecimal">
        SELECT  coalesce(SUM(credit_interest),0) FROM
        tb_rmbbox_credit_assignment
        WHERE credit_id = #{creditId}
    </select>

    <select id="querySumInterestAmountByInvestId" resultType="java.math.BigDecimal">
        SELECT  coalesce(SUM(interest_amount),0) from tb_rmbbox_credit_assignment where id in
            (
                    SELECT  DISTINCT(r.assignment_id) FROM
                    tb_rmbbox_credit_assignment a,tb_rmbbox_credit_sale s,tb_rmbbox_credit_assignment_repayment r
                    WHERE a.credit_id = s.id and a.id = r.assignment_id and s.invest_id = #{investId}
            )
    </select>

    <select id="querySumShareByInvestId" resultType="java.math.BigDecimal">
        SELECT  coalesce(SUM(a.share),0) FROM
        tb_rmbbox_credit_assignment a,tb_rmbbox_credit_sale s
        WHERE a.credit_id = s.id and s.invest_id = #{investId}
    </select>

    <select id="selectAssignmentsByUserId" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_assignment WHERE user_id = #{userId}
    </select>

    <update id="updateRaiseAmount">
        UPDATE
            tb_rmbbox_credit_assignment
        SET
            interest_amount = #{interestAmount}
        WHERE
            id = #{id} AND interest_amount = #{orginInterestAmount}
    </update>

    <select id="selectUnInterestAmount" resultType="java.math.BigDecimal">
        select
            IFNULL(SUM(a.interest_amount), 0) as amount
        FROM
            tb_rmbbox_credit_sale s
        INNER JOIN tb_rmbbox_credit_assignment a ON s.id = a.credit_id
        WHERE
            s.user_id = #{userId} AND s.status IN
            <foreach collection="statusList" open="(" close=")" separator="," item="status">
                #{status}
            </foreach>
    </select>

    <select id="selectSum" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_assignment
        <where>
            <if test="beginDate != null and endDate != null">
                and (create_time between #{beginDate} and #{endDate})
            </if>
        </where>
    </select>
    <select id="selectSumByLoanId" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_assignment a INNER JOIN tb_rmbbox_credit_sale s ON a.credit_id = s.id WHERE s.loan_id = #{loanId}
    </select>

    <select id="selectSumByUserId" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_assignment WHERE user_id = #{userId}
    </select>

    <select id="selectSaleSumByUserId" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        tb_rmbbox_credit_assignment a INNER JOIN tb_rmbbox_credit_sale s ON a.credit_id = s.id
        <where>
            <if test="status != null">
                s.status in
                <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                    #{s}
                </foreach>
            </if>
            AND a.user_id = #{userId}
        </where>
    </select>

    <select id="selectPageSumByCreditId" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        tb_rmbbox_credit_assignment
        WHERE
        credit_id = #{creditId}
    </select>

    <select id="selectSumByUserIdAndStatus" resultType="java.lang.Integer">
        SELECT
        COUNT(a.id)
        FROM
        tb_rmbbox_credit_assignment a INNER JOIN tb_rmbbox_credit_sale s ON a.credit_id = s.id
        <where>
            <if test="status != null">
                s.status in
                <foreach collection="status" open="(" close=")" index="" item="s" separator=",">
                    #{s}
                </foreach>
            </if>
            AND a.user_id = #{userId}
        </where>
    </select>

    <select id="queryAssignInfo" resultType="java.util.Map">
        SELECT
            a.amount,
            a.create_time,
            u.user_name,
            u.id_number
        FROM
            tb_rmbbox_credit_assignment a,
            tb_core_user u
        WHERE
            a.user_id = u.user_id
        AND a.credit_id = #{assignmentId}
    </select>
    <select id="selectByCreditSaleId" resultMap="BaseResultMap">
        SELECT * FROM tb_rmbbox_credit_assignment WHERE credit_id = #{creditSaleId} ORDER BY create_time DESC limit #{start},#{end}
    </select>

    <select id="selectSumByCreditId" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM tb_rmbbox_credit_assignment WHERE credit_id = #{creditSaleId} ORDER BY create_time DESC limit #{start},#{end}
    </select>

    <update id="updateCreditAssignmentRaiseAmount">
        UPDATE
            tb_rmbbox_credit_assignment
        SET
            raise_amount = #{dicountAmount}
        WHERE
            id = #{id} AND raise_amount = #{raiseAmount}
    </update>

    <select id="queryByIdWithUserInfo" resultType="com.zipi.modules.contract.entity.RmbboxCreditAssignment">
        SELECT
            a.order_id orderId, u.user_name userName,u.id_number idNumber,a.amount amount,a.credit_interest creditInterest
        FROM
            tb_rmbbox_credit_assignment a,
            tb_core_user u
        WHERE
            u.user_id = a.user_id
        AND a.id = #{id}
        limit 1
    </select>

    <select id="queryEnterpriseInfoByAssignmentId" resultType="com.zipi.modules.contract.entity.CoreUser">
        SELECT
                t.user_id AS userId,
                u.user_name AS userName,
                u.enterprise,
                u.company_name AS companyName,
                u.customer_no AS customerNo,
                u.user_mobile AS userMobile,
                u.id_number AS idNumber
        from tb_rmbbox_credit_assignment t,tb_rmbbox_credit_sale s,tb_core_user u
        WHERE t.credit_id = s.id AND s.user_id = u.user_id AND t.id = #{id}
    </select>

    <select id="querySumhareByInvestIdAndStatus" resultType="java.math.BigDecimal">
        SELECT  coalesce(SUM(a.share),0) FROM
        tb_rmbbox_credit_assignment a,tb_rmbbox_credit_sale s
        WHERE a.credit_id = s.id and s.invest_id = #{investId}
        and s.status in ('OPENED','FINISHED')
    </select>

    <update id="updateInterestAmountAndIsLastById">
        UPDATE tb_rmbbox_credit_assignment
        SET interest_amount = #{interestAmount},is_last = #{isLast}
        WHERE id = #{id}
    </update>

    <select id="selectSumRasingAmount" resultType="java.math.BigDecimal">
        SELECT
            (IFNULL(SUM(a.interest_amount),0) + IFNULL(SUM(a.raise_amount),0) - IFNULL(SUM(r.amount_raise),0)) as raiseAmount
        FROM
            tb_rmbbox_credit_assignment a
        INNER JOIN tb_rmbbox_credit_sale s ON s.id = a.credit_id
        INNER JOIN tb_rmbbox_credit_assignment_repayment r ON a.id = r.assignment_id

        WHERE
            s.loan_id = #{loanId} AND r.current_period = #{currentPeriod}
    </select>

    <select id="selectSumRasingAmountByStatus" resultType="java.math.BigDecimal">
        SELECT
            coalesce(SUM(a.raise_amount),0)
        FROM
            tb_rmbbox_credit_assignment a,tb_rmbbox_credit_sale s
        WHERE
            a.user_id = #{userId} and a.credit_id = s.id and s.status = #{creditStatus}
    </select>

    <select id="selectSumModifyPriceBycreditSaleId" resultType="java.math.BigDecimal">
        SELECT
            coalesce(SUM(IFNULL(amount,0) - IFNULL(credit_interest,0) - IFNULL(share,0)),0) as raiseAmount
        FROM
            tb_rmbbox_credit_assignment
        WHERE
            credit_id = #{creditSaleId}
    </select>

    <select id="getFirstAssignmentRecord" resultMap="BaseResultMap">
        SELECT
          <include refid="Base_Column_List"/>
        FROM
          tb_rmbbox_credit_assignment
        WHERE
          credit_id = #{creditSaleId}
        order by create_time desc
    </select>
</mapper>