<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zipi.mapper.RmbLoanRepaymentMapper">
	<resultMap id="BaseResultMap" type="com.zipi.entity.RmbLoanRepayment">
		<id column="id" property="id" />
		<result column="current_period" property="currentPeriod" />
		<result column="repay_amount" property="repayAmount" />
		<result column="repay_time" property="repayTime" />
		<result column="repay_status" property="repayStatus" />
		<result column="amount_interest" property="amountInterest" />
		<result column="amount_principal" property="amountPrincipal" />
		<result column="amount_out_standing" property="amountOutStanding" />
		<result column="due_date" property="dueDate" />
		<result column="loan_id" property="loanId" />
		<result column="user_id" property="loanerId" />
		<result column="request_id" property="requestId" />
		<result column="compensatory_id" property="compensatoryId"/>
		<result column="act_compensatory_id" property="actCompensatoryId"/>
		<result column="amount_service" property="amountService" />
		<result column="flag_service_charge" property="flagServiceCharge" jdbcType="VARCHAR" />
		<result column="next_repay_time" property="nextRepayTime"/>
		<result column="loaner_mobile" property="loanerMobile"/>
		<result column="repay_compensatory_amount" property="repayCompensatoryAmount"/>
		<result column="repay_compensatory_date" property="repayCompensatoryDate"/>
		<result column="transfer_flow" property="transferFlow"/>
		<result column="repay_flag" property="repayFlag" jdbcType="TINYINT"/>

	</resultMap>
	<resultMap id="RepayMGResult" type="com.zipi.entity.RmbLoanRepayment">
		<id column="id" property="id" />
		<result column="current_period" property="currentPeriod" />
		<result column="repay_amount" property="repayAmount" />
		<result column="repay_time" property="repayTime" />
		<result column="repay_status" property="repayStatus" />
		<result column="amount_interest" property="amountInterest" />
		<result column="amount_principal" property="amountPrincipal" />
		<result column="amount_out_standing" property="amountOutStanding" />
		<result column="due_date" property="dueDate" />
		<result column="loan_id" property="loanId" />
		<result column="request_id" property="requestId" />
		<result column="login_name" property="loaner"/>
		<result column="user_id" property="loanerId"/>
		<result column="available_amount" property="loanerAvailableAmount"/>
		<result column="loan_title" property="loanTitle"/>
		<result column="user_mobile" property="loanerMobile"/>
		<result column="compensatory_id" property="compensatoryId"/>
		<result column="act_compensatory_id" property="actCompensatoryId"/>
		<result column="amount_service1" property="amountService" />
		<result column="next_repay_time" property="nextRepayTime"/>
		<result column="loan_repay" property="loanRepay" jdbcType="TINYINT"/>
		<result column="flag_service_charge" property="flagServiceCharge" jdbcType="VARCHAR" />
		<result column="repay_compensatory_amount" property="repayCompensatoryAmount"/>
		<result column="repay_compensatory_date" property="repayCompensatoryDate"/>
		<result column="transfer_flow" property="transferFlow"/>
		<result column="repay_flag" property="repayFlag" jdbcType="TINYINT"/>
		<association property="rmbLoan" javaType="RmbLoan" resultMap="com.zipi.mapper.RmbLoanMapper.BaseResultMap"/>

	</resultMap>

	<sql id="Base_Column_List">
		id, current_period, repay_amount,
		repay_time,repay_status,amount_interest,amount_principal,amount_out_standing,amount_service,due_date,loan_id,user_id,modify_time,compensatory_id,
		act_compensatory_id,flag_service_charge,next_repay_time,repay_compensatory_amount,repay_compensatory_date,transfer_flow,repay_flag
	</sql>
	<update id="update">
		update tb_rmbbox_loan_repayment
		<set>
			<if test="currentPeriod != null">
				current_period = #{currentPeriod},
			</if>
			<if test="repayAmount != null">
				repay_amount = #{repayAmount},
			</if>
			<if test="repayTime != null">
				repay_time = #{repayTime},
			</if>
			<if test="repayStatus != null">
				repay_status = #{repayStatus},
			</if>
			<if test="amountInterest != null">
				amount_interest = #{amountInterest},
			</if>
			<if test="amountPrincipal != null">
				amount_principal = #{amountPrincipal},
			</if>
			<if test="amountOutStanding != null">
				amount_out_standing = #{amountOutStanding},
			</if>
			<if test="amountService != null">
				amount_service = #{amountService},
			</if>
			<if test="dueDate != null">
				due_date = #{dueDate},
			</if>
			<if test="loanId != null">
				loan_id = #{loanId},
			</if>
			<if test="flagServiceCharge != null">
				flag_service_charge = #{flagServiceCharge},
			</if>
			<if test="nextRepayTime != null">
				next_repay_time = #{nextRepayTime}
			</if>
		</set>
		where id = #{id}
	</update>

	<select id="selectByLoanId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tb_rmbbox_loan_repayment
		where loan_id=#{loanId}
	</select>

	<insert id="insert" parameterType="com.zipi.entity.RmbLoanRepayment">
		<selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
			SELECT UPPER(UUID()) AS id
		</selectKey>
		insert into tb_rmbbox_loan_repayment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id !=null">
				id,
			</if>
			<if test="currentPeriod != null">
				current_period,
			</if>
			<if test="repayAmount != null">
				repay_amount,
			</if>
			<if test="repayTime != null">
				repay_time,
			</if>
			<if test="repayStatus != null">
				repay_status,
			</if>
			<if test="amountInterest != null">
				amount_interest,
			</if>
			<if test="amountPrincipal != null">
				amount_principal,
			</if>
			<if test="amountOutStanding != null">
				amount_out_standing,
			</if>
			<if test="amountService != null">
				amount_service,
			</if>
			<if test="dueDate != null">
				due_date,
			</if>
			<if test="loanId != null">
				loan_id,
			</if>
			<if test="loanerId != null">
				user_id,
			</if>
			<if test="compensatoryId != null">
				compensatory_id,
			</if>
			<if test="flagServiceCharge != null">
				flag_service_charge,
			</if>
			<if test="repayFlag != null">
				repay_flag
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id !=null">
				#{id},
			</if>
			<if test="currentPeriod != null">
				#{currentPeriod},
			</if>
			<if test="repayAmount != null">
				#{repayAmount},
			</if>
			<if test="repayTime != null">
				#{repayTime},
			</if>
			<if test="repayStatus != null">
				#{repayStatus},
			</if>
			<if test="amountInterest != null">
				#{amountInterest},
			</if>
			<if test="amountPrincipal != null">
				#{amountPrincipal},
			</if>
			<if test="amountOutStanding != null">
				#{amountOutStanding},
			</if>
			<if test="amountService != null">
				#{amountService},
			</if>
			<if test="dueDate != null">
				#{dueDate},
			</if>
			<if test="loanId != null">
				#{loanId},
			</if>
			<if test="loanerId != null">
				#{loanerId},
			</if>
			<if test="compensatoryId != null">
				#{compensatoryId},
			</if>
			<if test="flagServiceCharge != null">
				#{flagServiceCharge},
			</if>
			<if test="repayFlag != null">
				#{repayFlag}
			</if>
		</trim>
	</insert>

 	<select id="listDueRepay" parameterType="java.util.Map" resultMap="RepayMGResult">
        select
		   re.*, fu.available_amount, req.user_id,req.loan_repay, u.login_name, lo.*, u.user_mobile,COALESCE(s.repay_amount,0) amount_service1
		from
           tb_rmbbox_loan_repayment re left join tb_rmbbox_loan_service_repayment s on re.id = s.id,
           tb_rmbbox_loan lo,
           tb_rmbbox_loan_request req,
		   tb_core_user_fund fu,
		   tb_core_user u
        where re.loan_id=lo.loan_id
		   and lo.request_id=req.request_id
		   and req.user_id = fu.user_id
		   and req.user_id = u.user_id
		<if test="params.repayFlag != null and params.repayFlag != ''">
			AND (next_repay_time IS null OR (next_repay_time IS NOT NULL and next_repay_time = CURDATE()))
		</if>
		<if test="params.sort == 'asc'">
			<if test="params.from != null and params.from != '' and params.to == null">
				and re.due_Date <![CDATA[ >= ]]> #{params.from}
			</if>
			<if test="params.to != null and params.to != '' and params.from == null">
				and #{params.to} <![CDATA[ > ]]> re.due_Date
			</if>
			<if test="params.from != null and params.from != '' and params.to != null and params.to != '' and params.repayFlag != null and params.repayFlag != ''">
				and ((re.due_Date <![CDATA[ >= ]]> #{params.from} and #{params.to} <![CDATA[ > ]]> re.due_Date) or (next_repay_time = CURDATE()))
			</if>
		</if>
		<if test="params.sort == 'desc'">
			<if test="params.from != null and params.from != ''">
				and re.repay_time <![CDATA[ >= ]]> #{params.from}
			</if>
			<if test="params.to != null and params.to != ''">
				and #{params.to} <![CDATA[ > ]]> re.repay_time
			</if>
		</if>
           AND re.repay_status IN
        <foreach collection="params.statusList" index="" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
        <if test="params.search != null and params.search != ''">
        	and (lo.loan_title like binary CONCAT('%',#{params.search},'%' ) or
	             u.login_name like binary CONCAT('%',#{params.search},'%' ))
        </if>
		<if test="params.sort == 'asc'">
			ORDER BY re.due_Date asc
		</if>
		<if test="params.sort == 'desc'">
			order by re.repay_time desc
		</if>
		 LIMIT #{pageInfo.startRow}, #{pageInfo.pageSize}
    </select>
    
    <select id="countDueRepay" parameterType="map" resultType="java.lang.Integer">
        select
		   count(*)
		from
           tb_rmbbox_loan_repayment re,
           tb_rmbbox_loan lo,
           tb_rmbbox_loan_request req,
		   tb_core_user_fund fu,
		   tb_core_user u
        where re.loan_id=lo.loan_id
		   and lo.request_id=req.request_id
		   and req.user_id = fu.user_id
		   and req.user_id = u.user_id
		<if test="repayFlag != null and repayFlag != ''">
			AND (next_repay_time IS null OR (next_repay_time IS NOT NULL and next_repay_time = CURDATE()))
		</if>
		<if test="sort == 'asc'">

			<if test="from != null and from != '' and to == null">
				and re.due_Date <![CDATA[ >= ]]> #{from}
			</if>
			<if test="to != null and to != '' and from == null">
				and #{to} <![CDATA[ > ]]> re.due_Date
			</if>
			<if test="from != null and from != '' and to != null and to != '' and repayFlag != null and repayFlag != ''">
				and ((re.due_Date <![CDATA[ >= ]]> #{from} and #{to} <![CDATA[ > ]]> re.due_Date) or (next_repay_time = CURDATE()))
			</if>

		</if>
		<if test="sort == 'desc'">
			<if test="from != null and from != ''">
				and re.repay_time <![CDATA[ >= ]]> #{from}
			</if>
			<if test="to != null and to != ''">
				and #{to} <![CDATA[ > ]]> re.repay_time
			</if>
		</if>
           AND re.repay_status IN
        	<foreach collection="statusList" index="" item="status" open="(" close=")" separator=",">
            	#{status}
        	</foreach>
        	<if test="search != null and search != ''">
	        	and (lo.loan_title like binary CONCAT('%',#{search},'%' ) or
	             u.login_name like binary CONCAT('%',#{search},'%' ))
	        </if>
    </select>

	<select id="getByRepaymentIdAndStatusAndDate" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from tb_rmbbox_loan_repayment
		where id = #{repaymentId}
		<if test="status != null and status != ''">
			and repay_status = #{status}
		</if>
		<if test="startDate != null and endDate != null">
			and (due_date between #{startDate} and #{endDate})
		</if>
	</select>
	<select id="getMaxCurrentPeriodByLoanId" resultType="java.lang.Integer">
		select current_period
		from tb_rmbbox_loan_repayment
		where loan_id = #{loanId}
		order by current_period desc
		Limit 0,1
	</select>

	<select id="selectRmbLoanRepayment" resultMap="BaseResultMap">
		select *
		from tb_rmbbox_loan_repayment
		where
		<if test="userId != null">
		   user_id = #{userId}
		</if>
		<if test="status != null">
			and repay_status = #{status}
		</if>
		<if test="startDate != null and endDate != null">
			and (due_date between #{startDate} and #{endDate})
		</if>
		order by due_date
		<if test="limitStart != null and limitCount != null">
			Limit #{limitStart},#{limitCount}
		</if>
	</select>

	<select id="getSumLoanRepay" resultType="java.math.BigDecimal">
		select
		coalesce(SUM(amount_interest+amount_principal), 0)
		from tb_rmbbox_loan_repayment
		where
		<if test="userId != null">
			user_id = #{userId}
		</if>
		<if test="status != null">
			and repay_status = #{status}
		</if>
		<if test="startDate != null and endDate != null">
			and (due_date between #{startDate} and #{endDate})
		</if>
	</select>

	<select id="getRepaymentTotalCount" resultType="java.lang.Integer">
		select
		COALESCE (count(*),0)
		FROM tb_rmbbox_loan_repayment
		WHERE
		<if test="userId!=null">
			user_id = #{userId}
		</if>
		<if test="status!=null">
			and repay_status = #{status}
		</if>
		<if test="startDate!=null and endDate!=null">
			and (due_date between #{startDate} and #{endDate})
		</if>
	</select>
	<select id="queryByloanRepaymentId" resultMap="BaseResultMap">
		SELECT * from tb_rmbbox_loan_repayment WHERE  id = #{repaymentId}
	</select>

	<update id="updateStatusById">
		UPDATE
			tb_rmbbox_loan_repayment
		SET
			repay_status = #{status}
		<if test="repayTime != null">
			, repay_time = #{repayTime}
		</if>
		<if test="nextRepayTime != null">
			, next_repay_time = #{nextRepayTime}
		</if>
		WHERE
			id = #{repaymentId}
			<if test="repayStatus !=null">
				and repay_status = #{repayStatus}
			</if>
	</update>

	<!-- 存管 -->
	<update id="updateRepayStatus">
		UPDATE
			tb_rmbbox_loan_repayment
		SET
			repay_amount = repay_amount + #{repayAmount},
			repay_time = now(),
			<if test="repayStatus != null">
				repay_status = #{repayStatus},
			</if>
			act_compensatory_id = #{compensatoryId}
		WHERE
			id = #{repaymentId}
	</update>

	<select id="queryGuarantorList" resultType="java.util.Map">
		SELECT
			u.user_id userId,
			CASE
			     WHEN u.user_id = 'SYS_GENERATE_001' THEN u.user_name
			     WHEN u.enterprise = true THEN u.company_name
			     WHEN u.enterprise = false THEN u.user_name
			END AS name,
			f.available_amount AS amount
		FROM
			tb_core_user u
		INNER JOIN tb_core_user_fund f ON f.user_id = u.user_id
		WHERE u.user_id = #{userId} or u.user_id = 'SYS_GENERATE_001'
	</select>
	<select id="queryByUserId" resultMap="BaseResultMap">
		SELECT * from tb_rmbbox_loan_repayment WHERE user_id = #{userId}
		<if test="loanIds !=null" >
			and loan_id in
			<foreach collection="loanIds" item="loanId" open="(" close=")" separator=",">
				#{loanId}
			</foreach>
		</if>
	</select>

	<select id="queryByCompensatoryIdAndStatusAndDate" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from tb_rmbbox_loan_repayment
		where 1 = 1
		<if test="status !=null" >
			and repay_status in
			<foreach collection="status" item="stat" open="(" close=")" separator=",">
				#{stat}
			</foreach>
		</if>
		<if test="startDate != null and endDate != null">
			<if test="actCompensatoryId != null">
				and act_compensatory_id = #{actCompensatoryId} and (repay_time between #{startDate} and #{endDate})
			</if>
			<if test="compensatoryId  != null">
				and compensatory_id = #{compensatoryId} and (due_date between #{startDate} and #{endDate})
			</if>
		</if>
		<if test="startRow != null and pageSize != null">
			Limit #{startRow},#{pageSize}
		</if>
	</select>
	<select id="countByCompensatoryIdAndStatusAndDate" resultType="Integer">
		select count(*)
		from tb_rmbbox_loan_repayment
		where 1 = 1
		<if test="status !=null" >
			and repay_status in
			<foreach collection="status" item="stat" open="(" close=")" separator=",">
				#{stat}
			</foreach>
		</if>
		<if test="startDate != null and endDate != null">
			<if test="actCompensatoryId != null">
				and act_compensatory_id = #{actCompensatoryId} and (repay_time between #{startDate} and #{endDate})
			</if>
			<if test="compensatoryId  != null">
				and compensatory_id = #{compensatoryId} and (due_date between #{startDate} and #{endDate})
			</if>
		</if>
	</select>
	<select id="sumCompensatoryByActCompensatoryId" resultType="java.math.BigDecimal">
		select
		coalesce(SUM(repay_amount), 0)
		from tb_rmbbox_loan_repayment
		where
			act_compensatory_id = #{actCompensatoryId}
			and repay_status in ('COMPENSATORY_REPAYED','PRE_REPAY_COMPENSATORY','SETTLE_COMPENSATORY_REPAYED')
	</select>
	<select id="sumServiceAmountByActCompensatoryId" resultType="java.math.BigDecimal">

		select coalesce(SUM(r.repay_amount), 0)

		from tb_rmbbox_loan_service_repayment r,tb_rmbbox_loan_repayment l

		where l.id = r.id
		and l.act_compensatory_id = #{actCompensatoryId}
		and l.repay_status in ('COMPENSATORY_REPAYED','PRE_REPAY_COMPENSATORY','SETTLE_COMPENSATORY_REPAYED')

	</select>
	<select id="selectNextPeriod" resultType="java.util.Date">
		SELECT
			due_date
		FROM
			tb_rmbbox_loan_repayment
		WHERE
			loan_id = #{loanId}
			AND current_period = #{currentPeriod}
	</select>
	<update id="updateFeeStatus">
		UPDATE
			tb_rmbbox_loan_repayment
		SET
			flag_service_charge = #{targetStatus}
			<if test="amountService != null">
				,amount_service = amount_service + #{amountService}
			</if>
			<if test="compensatoryId != null and compensatoryId !=''">
				,act_compensatory_id = #{compensatoryId}
			</if>
		WHERE
			id = #{id}
			<if test="currentStatus != null">
				and flag_service_charge = #{currentStatus}
			</if>
			<if test="repayStatus != null">
				and repay_status = #{repayStatus}
			</if>
	</update>

	<select id="queryNotifyList" resultMap="BaseResultMap">
		SELECT r.*,u.user_mobile loaner_mobile
		from tb_rmbbox_loan_repayment r,tb_core_user u
		WHERE r.user_id = u.user_id AND r.repay_status='UNDUE'
		and (DATE_ADD(CURDATE(),INTERVAL 2 DAY) = r.due_date or DATE_ADD(CURDATE(),INTERVAL 6 DAY) = r.due_date OR CURDATE() = r.due_date)
	</select>

    <select id="getRepaymentCountByUserId" resultType="java.lang.Integer">
        SELECT
           count(DISTINCT m.loan_id)
        FROM
            tb_rmbbox_loan_repayment m
        WHERE
            m.user_id = #{userId}
        and m.repay_status != 'REPAYED' and  m.repay_status != 'COMPENSATORY_REPAYED'
    </select>






	<select id="getDueDateByLoanId" resultType="java.util.Date">
		SELECT max(due_date) FROM tb_rmbbox_loan_repayment WHERE loan_id =#{loanId};
	</select>
	<select id="getAmountInterestByloanId"  resultType="java.math.BigDecimal">
		SELECT IFNULL(SUM(amount_interest),0)
        FROM tb_rmbbox_loan_repayment WHERE loan_id=#{loanId}
	</select>

	<select id="loanDueSpreeSend" resultMap="BaseResultMap">

		select cc.loan_id,cc.due_date as loanId from (SELECT
		MAX(r.due_date) AS due_date, r.loan_id
		FROM
		net_loan.tb_rmbbox_loan_repayment r
		WHERE
		r.repay_status = 'UNDUE'
		GROUP BY loan_id ) cc where CURDATE()  = DATE_SUB(cc.due_date, INTERVAL 2 DAY)

	</select>

	<select id="countLoanIdByUserId" resultType="java.lang.Integer">
		SELECT
           count(DISTINCT m.loan_id)
        FROM
            tb_rmbbox_loan_repayment m
        WHERE
            m.user_id = #{userId}
	</select>
	<select id="selectRmbLoanRepaymentByStatus" resultMap="BaseResultMap">
		select *
		from tb_rmbbox_loan_repayment
		where 1=1
		<if test="userId != null">
			and user_id = #{userId}
		</if>
		<if test="startDate != null and endDate != null">
			and (due_date between #{startDate} and #{endDate})
		</if>
	    <if test="statusList != null and statusList.size()>0">
			and repay_status in
			<foreach collection="statusList" item="status" separator="," open="(" close=")" index="" >
				#{status}
			</foreach>
		</if>
		order by due_date
		<if test="limitStart != null and limitCount != null">
			Limit #{limitStart},#{limitCount}
		</if>
	</select>

	<select id="getRmbLoanRepaymentsByLoanIdAndDateAndStatus" resultMap="BaseResultMap">
		SELECT * from tb_rmbbox_loan_repayment
		where 1=1
		<if test="userId != null and userId != ''">
		    and user_id = #{userId}
		</if>
		<if test="loanId != null and loanId != ''">
			and loan_id = #{loanId}
		</if>
		<if test="status != null and status != ''">
			and repay_status = #{status}
		</if>
		<if test="startDate != null and endDate != null">
			and (due_date between #{startDate} and #{endDate})
		</if>
	</select>

	<update id="updateRepayCompensatoryById">
		UPDATE tb_rmbbox_loan_repayment
		<set>
			<if test="amount != null">
				repay_compensatory_amount = #{amount},
			</if>
			<if test="date != null">
				repay_compensatory_date = #{date},
			</if>
			<if test="transferFlow != null and transferFlow != ''">
				transfer_flow = #{transferFlow},
			</if>
			<if test="status != null">
				repay_status = #{status}
			</if>
		</set>
		where id = #{id}
		<if test="repayStatus != null">
			and repay_status = #{repayStatus}
		</if>
	</update>
	
	<select id="queryRepaymentByLoadIdOrder" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List"/>
		from
			tb_rmbbox_loan_repayment
		WHERE
			loan_id = #{loanId}
		order by current_period desc
	</select>

	<select id="queryRepaymentByPeriodAndLoadId" resultMap="BaseResultMap">
		select
			*
		from
			tb_rmbbox_loan_repayment
		WHERE
			loan_id = #{loadId} AND current_period = #{period}
	</select>

	<update id="updateVoidRepaymentRecord">
		UPDATE
			tb_rmbbox_loan_repayment
		SET
			loan_id = REPLACE(loan_id,'-',''),
			user_id = REPLACE(user_id,'-',''),
			compensatory_id = REPLACE(compensatory_id,'-','')
		WHERE
			loan_id = #{loanId} AND current_period >= #{currentPeriod}
	</update>

	<select id="getLoanPrincipalByUserIdAndDate" resultType="java.math.BigDecimal">
		select COALESCE (SUM(amount_principal), 0)
		from tb_rmbbox_loan_repayment
		where user_id = #{userId}
		<if test="statusList != null">
			and repay_status in
			<foreach collection="statusList" index="" item="status" open="(" close=")" separator=",">
				#{status}
			</foreach>
		</if>
		<if test="startDate != null">
			and due_date >= #{startDate}
		</if>
		<if test="endDate != null">
			and #{endDate} > due_date
		</if>
	</select>

	<select id="getLoanInterestByUserIdAndDate" resultType="java.math.BigDecimal">
		select COALESCE (SUM(amount_interest), 0)
		from tb_rmbbox_loan_repayment
		where user_id = #{userId}
		<if test="statusList != null">
			and repay_status in
			<foreach collection="statusList" index="" item="status" open="(" close=")" separator=",">
				#{status}
			</foreach>
		</if>
		<if test="startDate != null">
			and due_date >= #{startDate}
		</if>
		<if test="endDate != null">
			and #{endDate} > due_date
		</if>
	</select>


	<select id="getPrincipalAndInterestByUserIdAndDateAndStatus" resultType="java.math.BigDecimal">

		select coalesce(SUM(amount_interest+amount_principal), 0)
		from tb_rmbbox_loan_repayment
		where 1=1
		and user_id = #{userId}
		and repay_status = #{status}
		and (due_date between #{startDate} and #{endDate})
	</select>

	<select id="getServiceAmountByUserIdAndDateAndStatus" resultType="java.math.BigDecimal">

		select coalesce(SUM(r.repay_amount), 0)

		from tb_rmbbox_loan_service_repayment r,tb_rmbbox_loan_repayment l

		where l.id = r.id
		and l.user_id = #{userId}
		and l.repay_status = #{status}
		and (l.due_date between #{startDate} and #{endDate})

	</select>
</mapper>